<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <!-- =======================================================================
    = PARENT
    ======================================================================== -->

    <!-- =======================================================================
    = PROJECT
    ======================================================================== -->
    <groupId>ch.vd.education</groupId>
    <artifactId>floratriton</artifactId>
    <version>3.3.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Flora (Triton) Packaging</name>

    <scm>
        <connection>${scm.connexion}</connection>
        <developerConnection>${scm.connexion}</developerConnection>
        <url>${scm.url}</url>
        <tag>HEAD</tag>
    </scm>

    <!-- =======================================================================
    = PROPERTIES
    ======================================================================== -->
    <properties>
        <delivery.filename>triton</delivery.filename>
        <delivery.packaging>tgz</delivery.packaging>
        <delivery.version>3.3.1-RELEASE</delivery.version>

        <scm.connexion>scm:git:ssh://git@bitbucket.etat-de-vaud.ch/education/floratriton-packaging.git</scm.connexion>
        <scm.url>https://dsigit.etat-de-vaud.ch/outils/git/projects/EDUCATION/repos/floratriton-packaging/browse</scm.url>

        <devex-maven-plugin.releaseVersion>${project.version}</devex-maven-plugin.releaseVersion>
        <devex-maven-plugin.deployUnit>${project.artifactId}</devex-maven-plugin.deployUnit>
        <devex-maven-plugin.deployTarget>Embedded</devex-maven-plugin.deployTarget>
        <devex-maven-plugin.configTag>master</devex-maven-plugin.configTag>
        <devex-maven-plugin.warProjectOnly>false</devex-maven-plugin.warProjectOnly>

        <!-- build properties -->
        <maven.build.timestamp.format>dd-MM-yyyy HH:mm</maven.build.timestamp.format>
        <build-date>${maven.build.timestamp}</build-date>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>

        <assembly.finalName>${devex-maven-plugin.deployUnit}-${devex-maven-plugin.releaseVersion}</assembly.finalName>

        <!-- dependencies -->
        <postgresql.version>42.2.25</postgresql.version>

        <!-- maven plugins -->
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <maven-assembly-plugin.version>2.5.3</maven-assembly-plugin.version>
        <maven-release-plugin.version>3.0.1</maven-release-plugin.version>
        <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
        <maven-dependency-plugin.version>3.2.0</maven-dependency-plugin.version>
        <groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
        <groovy-all.version>2.1.9</groovy-all.version>
        <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
        <devex-maven-plugin.version>2.0.0</devex-maven-plugin.version>

        <devex.profiles>devex.release,devex.in</devex.profiles>
        <release.goals>clean deploy</release.goals>
        <release.profiles>not,nexus,${devex.profiles}</release.profiles>
    </properties>

    <!-- =======================================================================
    = DEPENDENCIES MANAGEMENT
    ======================================================================== -->

    <!-- =======================================================================
    = DEPENDENCIES
    ======================================================================== -->
    <dependencies>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
    </dependencies>

    <!-- =======================================================================
    = BUILD
    ======================================================================== -->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <goals>${release.goals}</goals>
                        <pushChanges>true</pushChanges>
                        <releaseProfiles>${release.profiles}</releaseProfiles>
                        <tagNameFormat>@{project.version}</tagNameFormat>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>ch.vd.devex</groupId>
                    <artifactId>devex-maven-plugin</artifactId>
                    <version>${devex-maven-plugin.version}</version>
                    <configuration>
                        <deployTarget>${devex-maven-plugin.deployTarget}</deployTarget>
                        <deployUnit>${devex-maven-plugin.deployUnit}</deployUnit>
                        <configTag>${devex-maven-plugin.configTag}</configTag>
                        <releaseVersion>${devex-maven-plugin.releaseVersion}</releaseVersion>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-copy-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>version.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>
                <version>${groovy-maven-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-all</artifactId>
                        <version>${groovy-all.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>${project.basedir}/src/main/script/Packaging.groovy</source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptors>
                        <descriptor>assembly.xml</descriptor>
                    </descriptors>
                    <finalName>${assembly.finalName}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <tarLongFileMode>gnu</tarLongFileMode>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- =======================================================================
    = PROFILES
    ======================================================================== -->
    <!-- =======================================================================
    = PROFILES
    ======================================================================== -->
    <profiles>
        <profile>
            <id>not</id>
            <!-- NOTests -->
            <properties>
                <skipTests>true</skipTests>
            </properties>
        </profile>

        <profile>
            <id>nexus</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                            <finalName>${assembly.finalName}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-install</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- After creating the assembly, we only keep the .tar.gz, otherwise, the deploy goal will upload both the jar and the assembly -->
                    <!-- Using deploy:deploy-file is not convenient, because we cannot cleanly choose the repository type, ie SNAPSHOT vs STABLE to which we want to upload -->
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- we can't override this id -->
                                <id>default-clean</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${project.build.directory}</directory>
                                            <excludes>
                                                <exclude>${assembly.finalName}.tar.gz</exclude>
                                            </excludes>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
                <repository>
                    <id>nexus-dgnsi-server</id>
                    <name>Nexus DGNSI</name>
                    <url>${nexus.url}/app-jenkinsdgnsi-stable</url>
                </repository>
                <snapshotRepository>
                    <id>nexus-dgnsi-server</id>
                    <name>Nexus DGNSI</name>
                    <url>${nexus.url}/app-jenkinsdgnsi-snapshots</url>
                    <uniqueVersion>false</uniqueVersion>
                </snapshotRepository>
            </distributionManagement>
        </profile>

        <profile>
            <id>devex.release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>ch.vd.devex</groupId>
                        <artifactId>devex-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>create-release</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>devex.in</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>ch.vd.devex</groupId>
                        <artifactId>devex-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <configuration>
                                    <environment>IN</environment>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
