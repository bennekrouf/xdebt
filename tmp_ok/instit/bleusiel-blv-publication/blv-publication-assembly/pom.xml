<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<artifactId>blv-publication-assembly</artifactId>
	<name>bleusiel BLVP [assembly]</name>
	<description>[BLVP] assembly</description>
	<version>9.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<parent>
		<groupId>ch.vd.institutions.siel</groupId>
		<artifactId>shared-parent</artifactId>
		<version>9.0.0</version>
		<relativePath />
	</parent>

	<properties>
		<!-- See properties defined in environment-xx/maven/settings.xml -->
		<!-- Properties to define on command line: -->
		<!-- - config.location -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<original.name>blv-publication</original.name>
		<product.name>blvpublication</product.name>
		<config.location.default>../config</config.location.default>
		<!-- Default value: for customer -->
		<config.location>${config.location.default}</config.location>

		<!-- Shortcut to skip npm build of front. -->
		<!-- Handy when already build. -->
		<skip.front>false</skip.front>
		<!-- currently, we skip npm publication (no secure way of storing credentials) -->
		<skip.front.publish>true</skip.front.publish>
		<!-- define to true if there is no SQL in this release -->
		<assembly.sql.skip>false</assembly.sql.skip>
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
		<exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>

		<devex-maven-plugin.version>1.1.1</devex-maven-plugin.version>
		<devex-maven-plugin.configTag>${configTag}</devex-maven-plugin.configTag>
		<devex-maven-plugin.deployUnit>${product.name}</devex-maven-plugin.deployUnit>
		<release.goals>clean deploy</release.goals>
		<devex.profiles>devex.release,devex.in</devex.profiles>
		<release.profiles>not,${devex.profiles}</release.profiles>
		<devex-maven-plugin.releaseVersion>${project.version}</devex-maven-plugin.releaseVersion>
		<warprojectonly>false</warprojectonly>
	</properties>

    <dependencies>
        <dependency>
            <!-- see corresponding overlay in maven-war-plugin configuration -->
            <groupId>ch.vd.institutions.siel</groupId>
            <artifactId>blv-publication</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>
    </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<!-- extract version information without SNAPSHOT -->
					<execution>
						<id>app-version</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>
							<name>product.version</name>
							<value>${project.version}</value>
							<regex>()?$</regex>
							<replacement />
						</configuration>
					</execution>
					<!-- extract version information for NPM -->
					<execution>
						<id>npm-version</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>
							<name>product.npm.version</name>
							<value>${project.version}</value>
							<regex>^([0-9]+)\.([0-9]+)\.([0-9]+)([.-]([0-9]+))?(-P2)?(-PGA)?(-SNAPSHOT)?$</regex>
							<replacement>$1.$2.$3$7$8</replacement>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<configuration>
					<workingDirectory>${basedir}/../blv-publication-front</workingDirectory>
				</configuration>
				<executions>
					<execution>
						<id>exec-npm-install</id>
						<phase>prepare-package</phase>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<!-- use CI instead of install to have same dependencies -->
								<argument>ci</argument>
								<argument>--no-optional</argument>
								<argument>--no-audit</argument>
								<argument>--no-progress</argument>
								<!-- <argument>install</argument> -->
							</arguments>
							<skip>${skip.front}</skip>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<execution>
						<id>exec-npm-build</id>
						<phase>prepare-package</phase>
						<configuration>
							<executable>npm</executable>
							<arguments>
								<argument>run</argument>
								<argument>build</argument>
							</arguments>
							<skip>${skip.front}</skip>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- assembly -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<id>default-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<primaryArtifact>false</primaryArtifact>
							<archive>
								<addMavenDescriptor>false</addMavenDescriptor>
							</archive>
							<webResources>
								<webResource>
									<directory>../blv-publication-front/dist</directory>
								</webResource>
							</webResources>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<overlays>
								<overlay>
									<!-- see related dependency -->
									<id>back</id>
									<groupId>ch.vd.institutions.siel</groupId>
									<artifactId>blv-publication</artifactId>
									<type>war</type>
								</overlay>
							</overlays>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<configuration>
					<executable>true</executable>
				</configuration>
				<executions>
					<execution>
						<id>bin</id>
                        <phase>package</phase>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<finalName>${product.name}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>bin</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptor>src/bin.xml</descriptor>
							<finalName>${product.name}-${project.version}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<tarLongFileMode>posix</tarLongFileMode>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- skip default plugins inherited from super POM -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>default-testResources</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>default-testCompile</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>default-test</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											exec-maven-plugin
										</artifactId>
										<versionRange>
											[1.6.0,)
										</versionRange>
										<goals>
											<goal>exec</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>ch.vd.devex</groupId>
					<artifactId>devex-maven-plugin</artifactId>
					<version>${devex-maven-plugin.version}</version>
					<configuration>
						<configTag>${devex-maven-plugin.configTag}</configTag>
						<releaseVersion>${devex-maven-plugin.releaseVersion}</releaseVersion>
						<deployUnit>${devex-maven-plugin.deployUnit}</deployUnit>
						<warProjectOnly>${warprojectonly}</warProjectOnly>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>jenkins</id>
			<build>
				<resources>
					<resource>
						<directory>.</directory>
						<includes>
							<include>sonar-project.properties</include>
						</includes>
						<filtering>true</filtering>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>default-resources</id>
								<phase>process-resources</phase>
							</execution>
							<execution>
								<id>default-testResources</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- build DGNSI -->
		<profile>
			<id>dgnsi</id>
			<properties>
				<dgnsi>true</dgnsi>
				<deployUnit.name>blvpublication</deployUnit.name>
				<assembly.finalName>${project.artifactId}-${project.version}</assembly.finalName>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<executions>
							<execution>
								<id>dgnsi</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/dgnsi.xml</descriptor>
									</descriptors>
									<finalName>${assembly.finalName}</finalName>
									<appendAssemblyId>false</appendAssemblyId>
									<tarLongFileMode>gnu</tarLongFileMode>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<executions>
							<execution>
								<id>default-install</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
					<!-- After creating the assembly, we only keep the .tar.gz, otherwise, the deploy goal will upload both the jar and the assembly -->
					<!-- Using deploy:deploy-file is not convenient, because we cannot cleanly choose the repository type, ie SNAPSHOT vs STABLE to which we want to upload -->
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<executions>
							<execution>
								<!-- we can't override this id -->
								<id>default-clean</id>
								<phase>install</phase>
								<goals>
									<goal>clean</goal>
								</goals>
								<configuration>
									<excludeDefaultDirectories>true</excludeDefaultDirectories>
									<filesets>
										<fileset>
											<directory>${project.build.directory}</directory>
											<excludes>
												<exclude>${project.artifactId}-${project.version}.tar.gz</exclude>
											</excludes>
										</fileset>
									</filesets>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<repository>
					<id>nexus-dgnsi-server</id>
					<name>Nexus DGNSI</name>
					<url>${nexus.url}/app-${application.repository}-stable</url>
				</repository>
				<snapshotRepository>
					<id>nexus-dgnsi-server</id>
					<name>Nexus DGNSI</name>
					<url>${nexus.url}/app-${application.repository}-snapshots</url>
					<uniqueVersion>false</uniqueVersion>
				</snapshotRepository>
			</distributionManagement>
		</profile>
		<profile>
			<id>devex.release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>ch.vd.devex</groupId>
						<artifactId>devex-maven-plugin</artifactId>
						<version>${devex-maven-plugin.version}</version>
						<configuration>
							<deployUnits>
								<deployUnit>${deployUnit.name}</deployUnit>
							</deployUnits>
							<deployTarget>Embedded</deployTarget>
						</configuration>
						<executions>
							<execution>
								<id>create release</id>
								<phase>deploy</phase>
								<goals>
									<goal>create-release</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>devex.in</id>
			<build>
				<plugins>
					<plugin>
						<groupId>ch.vd.devex</groupId>
						<artifactId>devex-maven-plugin</artifactId>
						<version>${devex-maven-plugin.version}</version>
						<configuration>
							<deployUnits>
								<deployUnit>${deployUnit.name}</deployUnit>
							</deployUnits>
							<deployTarget>Embedded</deployTarget>
						</configuration>
						<executions>
							<execution>
								<id>deploy IN</id>
								<phase>deploy</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
								<configuration>
									<environment>IN</environment>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
