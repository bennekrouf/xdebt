<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- ###### PARENT SPRING BOOT ###### -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.6</version>
		<relativePath />
	</parent>

	<groupId>ch.vd.dfin.addi</groupId>
	<artifactId>addi-parent</artifactId>
	<version>24R3.A.2-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>addi-parent</name>
	<description>module parent addi</description>

	<modules>
		<module>apps</module>
	</modules>


	<properties>

		<!-- use UTF-8 for everything -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.encoding>UTF-8</project.encoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- JDK -->
		<java.version>11</java.version>

		<!-- ### plugins ### -->
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
		<maven-surefire-report-plugin.version>2.22.2</maven-surefire-report-plugin.version>
		<maven-plugin-plugin.version>3.6.0</maven-plugin-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-site-plugin.version>3.8.2</maven-site-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
		<jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
		<maven-war-plugin.version>3.2.3</maven-war-plugin.version>
		<maven-scm-plugin.version>1.11.2</maven-scm-plugin.version>
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<versions-maven-plugin.version>2.7</versions-maven-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M3</maven-enforcer-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<!-- This plugin provides the ability to run Ant tasks from within Maven -->
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
					<executions>
						<!-- Affiche des informations sur le build, utilisÃ© par Hudson pour renseigner la description des builds. -->
						<execution>
							<id>print-build-desc</id>
							<phase>validate</phase>
							<configuration>
								<target>
									<echo message="Building : ${project.artifactId}" />
									<echo message="BuildDesc: ${project.version}" />
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- The Assembly Plugin for Maven is primarily intended to allow users to aggregate the project output along with its dependencies, modules, site documentation, and other files into a single distributable 
					archive. -->
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
				</plugin>

				<!-- The Clean Plugin is used when you want to remove files generated at build-time in a project's directory -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>

				<!-- The Compiler Plugin is used to compile the sources of your project -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<encoding>${project.encoding}</encoding>
						<release>${java.version}</release>
					</configuration>
				</plugin>

				<!-- The dependency plugin provides the capability to manipulate artifacts. It can copy and/or unpack artifacts from local or remote repositories to a specified location -->
				<plugin>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
				</plugin>

				<!-- The deploy plugin is primarily used during the deploy phase, to add your artifact(s) to a remote repository for sharing with other developers and projects -->
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>

				<!-- The Install Plugin is used during the install phase to add artifact(s) to the local repository -->
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>

				<!-- This plugin provides the capability to build jars -->
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>

				<!-- The Javadoc Plugin uses the Javadoc tool to generate javadocs for the specified project -->
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>

				<!-- The Surefire Report Plugin parses the generated TEST-*.xml files under ${basedir}/target/surefire-reports and renders them using DOXIA, which creates the web interface version of the test results -->
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-report-plugin.version}</version>
				</plugin>

				<!-- The Maven Plugin Plugin is used to create a Maven plugin descriptor for any Mojo's found in the source tree, to include in the JAR. It is also used to generate report files for the Mojos as well 
					as for updating the plugin registry, the artifact metadata and generating a generic help goal -->
				<plugin>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>${maven-plugin-plugin.version}</version>
				</plugin>

				<!-- This plugin is used to release a project with Maven, saving a lot of repetitive, manual work. Releasing a project is made in two steps: prepare and perform -->
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<remoteTagging>true</remoteTagging>
						<goals>deploy -Denv=int -Pdeploy-on-tomcat</goals>
						<tagNameFormat>@{project.version}</tagNameFormat>
					</configuration>
				</plugin>


				<!-- The Resources Plugin handles the copying of project resources to the output directory -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>${project.encoding}</encoding>
					</configuration>
				</plugin>

				<!-- The Site Plugin is used to generate a site for the project -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>

				<!-- The Surefire Plugin is used during the test phase of the build lifecycle to execute the unit tests of an application -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<parallel>methods</parallel>
						<threadCount>2</threadCount>
						<excludes>
							<exclude>**/*IntegrationTest.java</exclude>
						</excludes>
					</configuration>
				</plugin>

				<!-- The Failsafe Plugin is designed to run integration tests while the Surefire Plugin is designed to run unit tests -->
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
				</plugin>

				<!-- The JaCoCo Maven plug-in provides the JaCoCo runtime agent to your tests and allows basic report creation -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>

				<!-- The WAR Plugin is responsible for collecting all artifact dependencies, classes and resources of the web application and packaging them into a web application archive -->
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
				</plugin>

				<!-- The SCM Plugin offers vendor independent access to common scm commands by offering a set of command mappings for the configured scm. -->
				<plugin>
					<artifactId>maven-scm-plugin</artifactId>
					<version>${maven-scm-plugin.version}</version>
				</plugin>

				<!-- This plugin contains various small independent goals to assist with the Maven build lifecycle. -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>add-source-xdoclet</id>
							<phase>generate-sources</phase>
							<configuration>
								<sources>
									<source>${source.xdoclet.outputDirectory}</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>


				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<executions>
						<execution>
							<id>enforce-maven</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>3.5.4</version>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<configuration>
					<generateBackupPoms>false</generateBackupPoms>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<!-- ###### DISTRIBUTION MANAGEMENT ###### -->
	<!-- Permet de dÃ©finir les urls pour Nexus -->

	<distributionManagement>
		<repository>
			<id>nexus.releases</id>
			<name>Nexus releases</name>
			<url>${nexus.url}/app-${application.repository}-stable</url>
		</repository>
		<snapshotRepository>
			<id>nexus.snapshots</id>
			<name>Nexus snaphots</name>
			<url>${nexus.url}/app-${application.repository}-snapshots</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
	</distributionManagement>

	<scm>
		<url>https://portail.etat-de-vaud.ch/outils/git/projects/FISC/repos/addi/browse</url>
		<connection>scm:git:ssh://git@bitbucket.etat-de-vaud.ch/fisc/addi.git</connection>
		<developerConnection>scm:git:ssh://git@bitbucket.etat-de-vaud.ch/fisc/addi.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<!-- ###### PROFILES ###### -->
	<profiles>
		<profile>
			<id>integration-continue</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>print-build-desc</id>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
