<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.3.RELEASE</version>
	</parent>

	<groupId>ch.vd.monitoringscreen</groupId>
	<artifactId>monitoring-screen</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Monitoring Screen</name>
	<description>Application pour écran de monitoring DSI</description>

	<properties>
		<main.basedir>${basedir}/../..</main.basedir>
		<java.version>11</java.version>
		<m2eclipse.wtp.contextRoot>/</m2eclipse.wtp.contextRoot>
		<javax.ws.rs-api.version>2.1</javax.ws.rs-api.version>
		<shared.jersey.version>1.8.0</shared.jersey.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-properties-migrator</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-el</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>13.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${javax.ws.rs-api.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.vd.shared</groupId>
			<artifactId>shared-jersey</artifactId>
			<version>${shared.jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>2.26</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<filesets>
						<!-- répertoires de travail de nodejs/gulp/bower -->
						<fileset>
							<directory>front/.tmp</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>front/coverage</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>front/dist</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<executions>

					<!-- configure npm -->
					<execution>
						<id>exec-config-npm</id>
						<configuration>
							<executable>npm</executable>
							<workingDirectory>front</workingDirectory>
							<arguments>
								<argument>config</argument>
								<argument>set</argument>
								<argument>registry</argument>
								<argument>http://nexus.etat-de-vaud.ch/repository/npm-group/</argument>
							</arguments>
						</configuration>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>

					<!-- installe les dépendances npm -->
					<execution>
						<id>exec-npm-install</id>
						<configuration>
							<executable>npm</executable>
							<workingDirectory>front</workingDirectory>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>

					<!-- construit l'application angular -->
					<execution>
						<id>exec-ng-build</id>
						<configuration>
							<executable>ng</executable>
							<workingDirectory>front</workingDirectory>
							<arguments>
								<argument>build</argument>
								<argument>--prod</argument>
							</arguments>
						</configuration>
						<phase>generate-sources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>

					<!-- exécute les tests unitaires (en phase de test uniqement) -->
					<execution>
						<id>exec-ng-test</id>
						<configuration>
							<skip>${skipTests}</skip>
							<executable>ng</executable>
							<workingDirectory>front</workingDirectory>
							<arguments>
								<argument>test</argument>
							</arguments>
						</configuration>
						<phase>test</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Ce plugin copie les fichiers 'dist' générés par 'ng build' et les pousse dans le répertorie de sortie de Maven -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<id>copy-ng-dist</id>
						<!-- here the phase you need -->
						<phase>process-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/static</outputDirectory>
							<resources>
								<resource>
									<directory>front/dist/front</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>not</id>
			<!-- NOTests -->
			<properties>
				<skipTests>true</skipTests>
			</properties>
		</profile>
	</profiles>

</project>
