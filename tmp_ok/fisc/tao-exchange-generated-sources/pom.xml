<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>ch.vd.fiscalite</groupId>
    <artifactId>shared-parent-plugin</artifactId>
    <version>2.0.9</version>
  </parent>
  <groupId>ch.vd.dfin.tao</groupId>
  <artifactId>tao-exchange-generated-sources</artifactId>
  <version>24R2.C.4-SNAPSHOT</version>
  <name>TAO Exchange generation des sources - Couche d'acces aux autres applications du SI</name>

  <properties>
    <wadl.src.dir>${project.basedir}/src/main/resources/wadl</wadl.src.dir>
    <xsd.src.dir>${project.basedir}/src/main/resources/xsd_tao</xsd.src.dir>
    <jaxb2.src.dir>${project.basedir}/src/main/resources/jaxb2</jaxb2.src.dir>
    <project.build.directory.jaxb>${project.build.directory}/generated-sources/jaxb/</project.build.directory.jaxb>
    <project.build.directory.cxf>${project.build.directory}/generated-sources/cxf</project.build.directory.cxf>
    <project.build.directory.jaxb2>${project.build.directory}/generated-sources/jaxb2/</project.build.directory.jaxb2>
    <jaxb2-basics.version>1.11.1</jaxb2-basics.version>
    <lib.apache.commons>3.8.1</lib.apache.commons>
    <maven-jaxb2-plugin-rifd-pm.verbose>false</maven-jaxb2-plugin-rifd-pm.verbose>
    <jdk.version>1.11</jdk.version>
    <maven.compiler.target>1.11</maven.compiler.target>
    <maven.compiler.source>1.11</maven.compiler.source>
    <maven.compiler.release>11</maven.compiler.release>
    <java.version>1.11</java.version>
    <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.cxf</groupId>
        <artifactId>cxf-wadl2java-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>generate-sources-wadl</id>
            <phase>generate-sources</phase>
            <configuration>
              <sourceRoot>${project.build.directory.cxf}</sourceRoot>
              <wadlOptions>
                <wadlOption>
                  <wadl>${wadl.src.dir}/SipfSituationsRestService-v1.wadl</wadl>
                  <packagename>ch.vd.service.sipf.situations.v1.service</packagename>
                </wadlOption>
              </wadlOptions>
            </configuration>
            <goals>
              <goal>wadl2java</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!--Jaxb-->
      <plugin>
        <groupId>com.sun.tools.xjc.maven2</groupId>
        <artifactId>maven-jaxb-plugin</artifactId>
        <version>1.1.1</version>
        <configuration>
          <readOnly>false</readOnly>
          <strict>true</strict>
          <extension>true</extension>
          <args>-Xvalue-constructor</args>
          <includeSchemas>
            <includeSchema>**/*.xsd</includeSchema>
          </includeSchemas>
        </configuration>
        <executions>
          <execution>
            <id>generate-sources-sipf-perception</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/sipf</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/perception</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>
          <execution>
            <id>generate-sources-sipf</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <excludeSchemas>
                <excludeSchema>**/ReclamationSchema.xsd</excludeSchema>
              </excludeSchemas>
              <schemaDirectory>${xsd.src.dir}/sipfPMDecision</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/sipfPMDecision</generateDirectory>
              <includeBindings>
                <includeBinding>**/decisonTaxationSchemaBinding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>
          <execution>
            <id>generate-sources-meldewesen</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/meldewesen</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/meldewesen</generateDirectory>
              <includeBindings>
                <includeBinding>**/meldewesen.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>
          <execution>
            <id>generate-sources-communication</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <excludeSchemas>
                <excludeSchema>**/ElementCommunCommunication-v3.xsd</excludeSchema>
              </excludeSchemas>
              <schemaDirectory>${xsd.src.dir}/communication</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/communication</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>
          <execution>
            <id>generate-sources-bouchon-securite</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/securite</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/securite</generateDirectory>
              <includeBindings>
                <includeBinding>**/bouchonSecuriteBinding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-declaration-impot</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/declarationImpot</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/declarationImpot</generateDirectory>
              <includeBindings>
                <includeBinding>**/declarationImpot.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-ncscore</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/ncscore</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/ncscore</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-unireg-v5</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/uniregV5</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/uniregV5</generateDirectory>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-piecesjustificatives</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/piecesJustificatives</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/piecesJustificatives</generateDirectory>
              <includeBindings>
                <includeBinding>**/piecesJustificatives.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-reqDes</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/reqDes</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/reqDes</generateDirectory>
              <includeBindings>
                <includeBinding>**/reqDes.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-email</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/email</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/email</generateDirectory>
              <includeBindings>
                <includeBinding>**/email.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-copieConformeList</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/folders</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/folders</generateDirectory>
              <includeBindings>
                <includeBinding>**/copieConformeList.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-impression-cyber</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/impression/cyber/v5</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/impression/cyber/v5</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-impression-tao</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/impression/tao</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/impression/tao</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-impression-2008</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/impression/2008</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/impression/2008</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-evenemt-interne-is</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/evenement/is</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/evenement/is</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-evenement-fiscal</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/evenementFiscal</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/evenementFiscal</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-passerelle-employeur-is</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/empAci</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/impotsource</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
              <includeSchemas>
                <includeSchema>*.xsd</includeSchema>
                <includeSchema>swissdec/v4/*.xsd</includeSchema>
                <includeSchema>swissdec/v5/*.xsd</includeSchema>
              </includeSchemas>
              <excludeSchemas>
                <excludeSchema>evtQuittanceListe-v1.xsd</excludeSchema>
              </excludeSchemas>
            </configuration>
          </execution>

          <execution>
            <id>generate-sources-fidor</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/fidor</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/fidor</generateDirectory>
              <includeBindings>
                <includeBinding>**/binding.xjb</includeBinding>
              </includeBindings>
            </configuration>
          </execution>

          <execution>
            <id>generate-source-sms</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/sms</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/sms</generateDirectory>
            </configuration>
          </execution>

          <execution>
            <id>generate-source-dperm</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/dperm</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/dperm</generateDirectory>
            </configuration>
          </execution>
          <execution>
            <id>generate-source-iam</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/iam</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/iam</generateDirectory>
            </configuration>
          </execution>
          <execution>
            <id>generate-source-publication</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/publication</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/publication</generateDirectory>
            </configuration>
          </execution>

          <execution>
            <id>generate-source-editique</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/editique</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/editique</generateDirectory>
              <excludeSchemas>
                <excludeSchema>**/fiscalite/**/*.xsd</excludeSchema>
				<excludeSchema>**/is/**/*.xsd</excludeSchema>
              </excludeSchemas>
            </configuration>
          </execution>

          <execution>
            <id>generate-source-tao</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/tao</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/tao</generateDirectory>
            </configuration>
          </execution>

        </executions>
        <dependencies>
          <dependency>
            <groupId>org.andromda.thirdparty.jaxb2_commons</groupId>
            <artifactId>value-constructor</artifactId>
            <version>1.0</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>replacer</artifactId>
          <version>1.5.3</version>
          <executions>
              <execution>
                  <phase>process-resources</phase>
                  <goals>
                      <goal>replace</goal>
                  </goals>
              </execution>
          </executions>
          <configuration>
              <includes>
                  <include>${project.build.directory.jaxb}**/*.java</include>
              </includes>
                <token>public Boolean is(.*)\(\)(\s*\{\s*.+\s*\})</token>
                <value>public Boolean is$1\(\)$2
        public Boolean get$1\(\)$2</value>
          </configuration>
      </plugin>

      <!-- Jaxb2  XSD (JAXB2) -->
      <plugin>
        <groupId>org.jvnet.jaxb2.maven2</groupId>
        <artifactId>maven-jaxb2-plugin</artifactId>
        <version>0.14.0</version>
        <configuration>
          <args>
            <arg>-enableIntrospection</arg>
            <arg>-Xequals</arg>
            <arg>-XhashCode</arg>
            <arg>-Xfluent-api</arg>
            <arg>-Xdefault-value</arg>
            <arg>-Xannotate</arg>
            <arg>-Xinheritance</arg>
          </args>
          <markGenerated>true</markGenerated>
          <generateDirectory>${project.build.directory.jaxb2}</generateDirectory>
          <plugins>
            <plugin>
              <groupId>com.github.krasa</groupId>
              <artifactId>krasa-jaxb-tools</artifactId>
              <version>1.3</version>
            </plugin>
            <plugin>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-default-value</artifactId>
              <version>1.1</version>
            </plugin>
            <plugin>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-basics</artifactId>
              <version>${jaxb2-basics.version}</version>
            </plugin>
            <plugin>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-basics-tools</artifactId>
              <version>${jaxb2-basics.version}</version>
            </plugin>
            <plugin>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-basics-runtime</artifactId>
              <version>${jaxb2-basics.version}</version>
            </plugin>
            <dependency>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-fluent-api</artifactId>
              <version>3.0</version>
            </dependency>
            <plugin>
              <groupId>org.jvnet.jaxb2_commons</groupId>
              <artifactId>jaxb2-basics-annotate</artifactId>
              <version>1.0.2</version>
            </plugin>
          </plugins>
          <schemaDirectory>${xsd.src.dir}</schemaDirectory>
          <bindings>
            <binding>
              <fileset>
                <directory>${jaxb2.src.dir}/xjb</directory>
                <includes>
                  <include>**/*.xjb</include>
                </includes>
              </fileset>
            </binding>
          </bindings>
          <extension>true</extension>
          <strict>false</strict>
          <verbose>true</verbose>
        </configuration>
        <executions>
          <execution>
            <id>generate-sources-acicom</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/acicom</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/acicom</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/binding.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-evenement</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/evenement/pp</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/evenement/pp</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/binding.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-publication</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/evenement/publication</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/evenement/publication</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/binding.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-unireg-common</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/evenement/unireg</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/evenement/unireg</generateDirectory>
              <removeOldOutput>true</removeOldOutput>
              <bindingIncludes>
                <includeBinding>**/evenementFiscalCommun-v1.xjb</includeBinding>
                <includeBinding>**/evenementImpotSourceCommun-v1.xjb</includeBinding>
              </bindingIncludes>
              <episodeFile>${project.build.directory.jaxb}/evenement/unireg/unireg-common.episode</episodeFile>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-unireg</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/evenement/unireg</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/evenement/unireg</generateDirectory>
              <removeOldOutput>true</removeOldOutput>
              <bindingIncludes>
                <includeBinding>**/binding.xjb</includeBinding>
              </bindingIncludes>
              <args>
                <arg>-enableIntrospection</arg>
                <arg>-Xequals</arg>
                <arg>-XhashCode</arg>
                <arg>-Xfluent-api</arg>
                <arg>-Xdefault-value</arg>
                <arg>-Xannotate</arg>
                <arg>-Xinheritance</arg>
                <arg>-b</arg>
                <arg>${project.build.directory.jaxb}/evenement/unireg/unireg-common.episode</arg>
              </args>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-registre</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/evenement/registre</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/evenement/registre</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/binding.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-di</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/di</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/di</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-demandeIIES</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/demandeIIES</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/demandeIIES</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-xmlgen-default</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/xmlGen/defaut</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/xmlGen/defaut</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/binding.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-xmlgen-is</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/xmlGen/is</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/xmlGen/is</generateDirectory>
              <bindingIncludes>
                <includeBinding>binding.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-xmlgen-pm</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/xmlGen/pm</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/xmlGen/pm</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-xmlgen-pp</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/xmlGen/pp</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/xmlGen/pp</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-sipf-pm</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/sipfPM</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/sipfPM</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>
          <execution>
            <id>jaxb2-generate-sources-unireg-rapport-batch</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/uniregBatch</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/uniregBatch</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>

          <execution>
            <id>generate-source-dossier-fiscal</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/dossierFiscal</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/dossierFiscal</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>

          <execution>
            <id>generate-source-demande-delai-pieces-justificatives</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/demandeDelaiPiecesJustificatives</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/demandeDelaiPiecesJustificatives</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>

          <execution>
            <id>generate-source-taoif</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/taoif</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/taoif</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>

          <execution>
            <id>generate-source-reservationTache</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <schemaDirectory>${xsd.src.dir}/reservationTache</schemaDirectory>
              <generateDirectory>${project.build.directory.jaxb}/reservationTache</generateDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
            </configuration>
          </execution>

          <!-- Ajout Tao RIFD ressources -->
          <execution>
            <id>generate-source-rifd</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <encoding>UTF-8</encoding>
              <args>
                <arg>-enableIntrospection</arg>
                <arg>-Xequals</arg>
                <arg>-XhashCode</arg>
                <arg>-XtoString</arg>
                <arg>-no-header</arg>
                <arg>-Xfluent-api</arg>
                <arg>-Xdefault-value</arg>
                <arg>-Xannotate</arg>
              </args>
              <markGenerated>true</markGenerated>
              <generateDirectory>${project.build.directory.jaxb}/rifd</generateDirectory>
              <schemaDirectory>${xsd.src.dir}/rifd</schemaDirectory>
              <bindingIncludes>
                <includeBinding>**/*.xjb</includeBinding>
              </bindingIncludes>
              <extension>true</extension>
              <strict>false</strict>
              <verbose>${maven-jaxb2-plugin-rifd-pm.verbose}</verbose>
            </configuration>
          </execution>
          <!-- fin Ajout Tao RIFD ressources -->

        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory.jaxb}/meldewesen</source>
                <source>${project.build.directory.jaxb}/communication/</source>
                <source>${project.build.directory.jaxb}/securite/</source>
                <source>${project.build.directory.jaxb}/declarationImpot</source>
                <source>${project.build.directory.jaxb}/empAci</source>
                <source>${project.build.directory.jaxb}/fidor</source>
                <source>${project.build.directory.jaxb}/accuseReception</source>
                <source>${project.build.directory.jaxb}/impotsource</source>
                <source>${project.build.directory.jaxb}/email</source>
                <source>${project.build.directory.jaxb}/folders</source>
                <source>${project.build.directory.jaxb}/impression/cyber/v5</source>
                <source>${project.build.directory.jaxb}/piecesJustificatives</source>
                <source>${project.build.directory.jaxb}/reqDes</source>
                <source>${project.build.directory.jaxb}/ncscore</source>
                <source>${project.build.directory.jaxb}/sms</source>
                <source>${project.build.directory.jaxb}/dossierFiscal</source>
                <source>${project.build.directory.jaxb}/demandeDelaiPiecesJustificatives</source>
                <source>${project.build.directory.jaxb}/taoif</source>
                <source>${project.build.directory.jaxb}/dperm</source>
                <source>${project.build.directory.jaxb}/iam</source>
                <source>${project.build.directory.jaxb}/publication</source>
                <source>${project.build.directory.jaxb}/uniregV5</source>
                <source>${project.build.directory.jaxb}/editique</source>
                <source>${project.build.directory.jaxb}/taopm</source>
                <source>${project.build.directory.jaxb}/sipfPMDecision</source>
                <source>${project.build.directory.jaxb}/perception</source>
                <source>${project.build.directory.jaxb}/impression/2008</source>
                <source>${project.build.directory.jaxb}/impression/tao</source>
                <source>${project.build.directory.jaxb}/evenement/is</source>
                <source>${project.build.directory.jaxb}/evenementFiscal</source>
                <source>${project.build.directory.jaxb}/tao</source>
                <source>${project.build.directory.jaxb2}</source>
                <source>${project.build.directory.cxf}</source>
              </sources>

            </configuration>
          </execution>
          <execution>
            <id>add-source-xdoclet</id>
            <phase>generate-sources</phase>
            <configuration>
              <sources>
                <source>${source.xdoclet.outputDirectory}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <executions>
          <!-- Executeur dediee a la compilation des sources castor generees,
            la compilation en UTF-8 est obligatoire depuis que le serveur IC fonctionne
            sur une machine Unix, les fichiers java y sont generes en UTF-8. -->
          <execution>
            <id>compile-xsd-generated-class-utf-8</id>
            <!-- La compilation de ces classes ce fait avant la compilation standard
              de maven. -->
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <encoding>UTF-8</encoding>
              <source>${java.version}</source>
              <target>${java.version}</target>
              <includes>
                <!-- Interface appartenant au code source, interfaces utiles au code
                  source a genener. -->
                <include>**/model/evenementexterne/RegistreEvenement.java</include>
                <include>**/model/evenementexterne/UniregEvenement.java</include>
                <include>**/model/evenementexterne/EvenementExterne.java</include>
                <include>**/model/evenementexterne/PPEvenement.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.castor</groupId>
      <artifactId>castor</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.ws.rs</groupId>
      <artifactId>jsr311-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
      <version>2.2.6</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${lib.apache.commons}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jvnet.jaxb2_commons</groupId>
      <artifactId>jaxb2-basics</artifactId>
      <version>${jaxb2-basics.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <scm>
    <connection>scm:git:ssh://git@bitbucket.etat-de-vaud.ch/fisc/tao-exchange-generated-sources.git</connection>
    <developerConnection>scm:git:ssh://git@bitbucket.etat-de-vaud.ch/fisc/tao-exchange-generated-sources.git</developerConnection>
    <url>https://portail.etat-de-vaud.ch/outils/git/projects/FISC/repos/tao-exchange-generated-sources</url>
    <tag>${project.artifactId}-${project.version}</tag>
  </scm>
</project>
