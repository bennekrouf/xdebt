<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- POM parent commun à tous les modules du projet Cyberfact.
         Contient des définitions de dépendances, de plugins et de propriétés.
         Ceci n'est pas un aggrégateur de modules.
         -->

    <groupId>ch.vd.cyber.efacture</groupId>
    <artifactId>efacture-base</artifactId>
    <!-- BEGIN_LVERSION -->
    <version>4.8.18-SNAPSHOT</version>
    <!-- END_LVERSION -->

    <name>efacture-base</name>
    <description>POM parent commun à tous les modules du projet Cyberfact</description>

    <packaging>pom</packaging>
    
    <modelVersion>4.0.0</modelVersion>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>${file.encoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.14.1</version>
                <configuration>
                    <!--forkCount=1 et reuseForks=false est équivalent à l'ancien forkMode=always (https://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html)-->
                    <!--Ici on force un nouveau fork pour chaque classe de tests.
                    C'est passablement plus long pour exécuter les tests cyberfact-svc (6 min au lieu d'une environ)
                    mais sans cela certains tests échouent par intermittence (InvoicePostFinanceBusinessListenerTest, SixpaynetUnsubscriptionJira299Test, SixpaynetSubscriptionJira348Test)
                    Il semble que le résultat dépend de l'ordre d'exécution des tests, y a-t-il des effets de bords à travers le contexte Spring ?
                    Pourtant il me semble qu'on réinitialise les beans nécessaires au début de chaque test.
                    TODO: à investiguer quand on aura du temps.
                    -->
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                    <configuration>
                        <checkModificationExcludes>
                            <checkModificationExclude>**/tests.properties</checkModificationExclude>
                        </checkModificationExcludes>
                    </configuration>
                </plugin>
                <!-- The JaCoCo Maven plug-in provides the JaCoCo runtime agent to your tests and allows basic report creation -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.8</version>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <!-- ================= Profil pour les developpeurs pour skipper les tests  ================= -->
        <profile>
            <id>not</id>
            <!-- NOTests -->
            <properties>
                <skipTests>true</skipTests>
            </properties>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>nexus.releases</id>
            <name>Nexus releases</name>
            <url>${nexus.url}/app-${application.repository}-stable</url>
        </repository>
        <snapshotRepository>
            <id>nexus.snapshots</id>
            <name>Nexus snaphots</name>
            <url>${nexus.url}/app-${application.repository}-snapshots</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-acl</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>6.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons.lang.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- slf4j-api DOIT avoir la même version que slf4j-log4j12 => on force
            la même version -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>


        <!--SPRING -->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- On force la récupération de ces 2 dépendances à la version commune de spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!--ESB-->
        <dependency>
             <groupId>ch.vd.technical.esb</groupId>
             <artifactId>EsbClient</artifactId>
             <version>${EsbClient.version}</version>
         </dependency>

        <!--TESTING -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.vd.registre</groupId>
            <artifactId>shared-testing</artifactId>
            <version>${shared-testing.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <properties>
        <!-- Maven settings -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Main dependency versions -->
        <commons.lang3.version>3.3.2</commons.lang3.version>
        <commons.lang.version>2.5</commons.lang.version>
        <commons.io.version>1.4</commons.io.version>

        <shared-spring-web.version>1.1</shared-spring-web.version>
        <shared-spring-properties.version>1.1</shared-spring-properties.version>
        <shared-datasource.version>1.0</shared-datasource.version>
        <shared-base.version>4.15.0</shared-base.version>
        <!--<shared-base.version>4.15.0</shared-base.version>-->
        <shared-hibernate.version>1.6.0</shared-hibernate.version>
        <!--<shared-tipi.version>2.8.0</shared-tipi.version>-->
        <EsbClient.version>3.2.10</EsbClient.version>
        <shared-iam.version>1.6.0</shared-iam.version>
        <!--<shared-iam.version>2.4.0</shared-iam.version>-->
		<shared-hqlbuilder.version>1.7.0</shared-hqlbuilder.version>

        <!-- Web application versions -->
        <jsp.version>2.1</jsp.version>
        <servlet.version>2.5</servlet.version>
        <jstl.version>1.2</jstl.version>

        <!-- Framework dependency versions -->
        <!--<spring.version>3.1.1.RELEASE</spring.version>&lt;!&ndash; la propriété schemaResourceResolver n'est présent dans Jaxb2Marshaller qu'à partir de la version 3.1.0.RELEASE &ndash;&gt;-->
        <spring.version>3.2.3.RELEASE</spring.version><!-- la propriété schemaResourceResolver n'est présent dans Jaxb2Marshaller qu'à partir de la version 3.1.0.RELEASE -->
        <spring.security.version>3.1.4.RELEASE</spring.security.version><!-- la propriété schemaResourceResolver n'est présent dans Jaxb2Marshaller qu'à partir de la version 3.1.0.RELEASE -->
        <activemq.version>5.8.0.redhat-60024</activemq.version>
        <cxf.version>2.5.0</cxf.version>
        <log4j.version>1.2.17</log4j.version>
        <slf4j.version>1.7.5</slf4j.version>
		<hibernate.version>3.5.4-Final</hibernate.version>
        <jodatime.version>2.2</jodatime.version>

        <!-- Testing dependency versions -->
        <junit.version>4.8.1</junit.version>
        <shared-testing.version>3.2.0</shared-testing.version>
        <!--<shared-testing.version>4.0.0</shared-testing.version>-->

        <!-- Database parameters -->
        <oracle.version>19.6.0.0</oracle.version>

        <!-- Utf Bom inout for Postfinance CSV -->
        <commons.io.version>2.5</commons.io.version>

        <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>

        <maven.build.timestamp.format>yyMMdd_HHmm</maven.build.timestamp.format>
        <buildNumber>${maven.build.timestamp}</buildNumber>
    </properties>

</project>

