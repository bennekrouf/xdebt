<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.vd.formation.inexta</groupId>
    <artifactId>inextaweb</artifactId>

    <!-- BEGIN_LVERSION -->
    <version>10.2.4</version>
    <!-- END_LVERSION -->
    <packaging>war</packaging>

    <name>inexta-web</name>
    <description>inexta-web</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.13</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!--<scm>-->
    <!--<developerConnection>scm:git:git@git.etat-de-vaud.ch::/shared/dsi-webapp-template</developerConnection>-->
    <!--<tag>HEAD</tag>-->
    <!--</scm>-->

    <profiles>
        <profile>
            <id>linux</id>
            <!-- to execute shell scripts instead of .bat files -->
            <activation>
                <os>
                    <family>linux</family>
                </os>
            </activation>
            <properties>
                <scriptExtension>sh</scriptExtension>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>exec-yarn-install</id>
                                <configuration>
                                    <executable>yarn</executable>
                                    <arguments>
                                        <argument>--pure-lockfile</argument>
                                        <argument>install</argument>
                                    </arguments>
                                    <skip>${build.nofront}</skip>
                                </configuration>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>not</id>
            <!-- NOTests -->
            <properties>
                <skipTests>true</skipTests>
            </properties>
        </profile>
        <profile>
            <!-- pour le déploiement en DEV -->
            <id>env.de</id>
            <properties>
                <assembly.createdeploy>true</assembly.createdeploy>
                <assembly.env>DE</assembly.env>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                            <finalName>${assembly.finalName}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy-application-tomcat</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- pour le déploiement en TEST -->
            <id>env.te</id>
            <properties>
                <assembly.createdeploy>true</assembly.createdeploy>
                <assembly.env>TE</assembly.env>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                            <finalName>${assembly.finalName}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy-application-tomcat</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>env.cei</id>
            <properties>
                <assembly.env>CEI</assembly.env>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>${maven-assembly-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly.xml</descriptor>
                            </descriptors>
                            <finalName>${assembly.finalName}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                            <tarLongFileMode>posix</tarLongFileMode>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>cei.aew.web</groupId>
                        <artifactId>cei-maven-plugin</artifactId>
                        <version>1.1.0</version>
                        <executions>
                            <execution>
                                <phase>install</phase>
                                <goals>
                                    <goal>upload</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <webresourceurl>${xfile.url}</webresourceurl>
                            <filetoupload>target/inextaweb-${project.version}.zip</filetoupload>
                            <from>c6faw2</from>
                            <to>WEB</to>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>
    </profiles>

    <properties>
        <java.version>11</java.version>

        <!--        ******************************* -->
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
        <!--        ******************************* -->

        <!--
        NE PAS PRENDRE LA VERSION lombok de SpringBoot.
        Version la plus récente de Lombok n'est pas compatible avec "mapstruct".
        Problème de compatibilté connue entre MapStruct et Lombok. Require que la classe Lombok
        soit dans un module séparé.
        Texto dans la doc mapstruct :
          "Lombok - requires having the Lombok classes in a separate module. See for more
          information rzwitserloot/lombok#1538"
        https://mapstruct.org/documentation/1.3/reference/html/
        -->
        <lombok.version>1.18.12</lombok.version>
        <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>

        <jaxb2-version>1.11.1</jaxb2-version>
        <maven-jaxb2-plugin-version>0.14.0</maven-jaxb2-plugin-version>
        <jaxb2-basics-annotate-version>1.1.0</jaxb2-basics-annotate-version>

        <oracle.jdbc>12.1.0.2.0</oracle.jdbc>

        <!-- use UTF-8 for everything -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <start-class>ch.vd.formation.InextaSpringBootApplication</start-class>

        <!-- Paramètres -->
        <jvm.mem.params>-Xmx1024</jvm.mem.params>

        <!-- Parametres de testing -->
        <surefire.useFile>false</surefire.useFile>
        <failsafe.useFile>false</failsafe.useFile>
        <skipTests>false</skipTests>

        <!-- librairies DSI -->
        <pee-shared-base.version>5.0.4</pee-shared-base.version>
        <shared-iam.version>7.0.0</shared-iam.version>
<!--        <pee-shared-testing.version>5.0.8</pee-shared-testing.version>-->
        <pee-shared-testing.version>6.0.3</pee-shared-testing.version>
        <refedu-shared-xsd-version>1.0.2</refedu-shared-xsd-version>

        <!-- plugins maven -->
        <maven-failsafe-plugin.version>2.18</maven-failsafe-plugin.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
        <maven-compiler-plugin.version>3.2</maven-compiler-plugin.version>
        <maven-jar-plugin.version>2.5</maven-jar-plugin.version>
        <maven-source-plugin.version>2.4</maven-source-plugin.version>
        <maven-release-plugin.version>2.5.1</maven-release-plugin.version>
        <buildnumber-maven-plugin.version>1.3</buildnumber-maven-plugin.version>
        <cei-maven-plugin.version>1.1.0</cei-maven-plugin.version>

        <!-- === DEPLOIEMENT === -->
        <ant-jsch-version>1.7.1</ant-jsch-version>
        <assembly.env>TBD</assembly.env>

        <tomcat.server.host>slv3237v.etat-de-vaud.ch</tomcat.server.host>
        <tomcat.server.username>dsi_inexta</tomcat.server.username>
        <tomcat.server.password>tulipe</tomcat.server.password>
        <dist.app.name>inextaweb-${project.version}</dist.app.name>
        <tomcat.server.root>/ccv/data/dsi_inexta</tomcat.server.root>
        <tomcat.server.domain.name>inextaweb${assembly.env}</tomcat.server.domain.name>
        <tomcat.server.instance>${tomcat.server.root}/${tomcat.server.domain.name}</tomcat.server.instance>
        <tomcat.app.dir>${tomcat.server.instance}/app/inexta</tomcat.app.dir>
        <tomcat.applications.dir>${tomcat.server.instance}/applications/inexta</tomcat.applications.dir>

        <tomcat.delivery.dir>${tomcat.server.root}/versions</tomcat.delivery.dir>
        <tomcat.command>./${tomcat.server.domain.name}/tomcatctl.sh</tomcat.command>
        <tomcat.instance></tomcat.instance>

        <local.distribution.artifact.file>${project.basedir}/target/${dist.app.name}.zip
        </local.distribution.artifact.file>

        <xfile.url>http://outils-xweb-ws.etat-de-vaud.ch/outils/xweb/api</xfile.url>
        <assembly.finalName>${project.artifactId}-${project.version}</assembly.finalName>

        <assembly.includeBaseDir>true</assembly.includeBaseDir>
        <assembly.format>zip</assembly.format>

        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>dd-MM-yyyy'T'HH:mm</maven.build.timestamp.format>

        <scriptExtension>bat</scriptExtension>
        <build.nofront>false</build.nofront>
    </properties>

    <dependencies>

        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-properties-migrator</artifactId>
            <scope>runtime</scope>
        </dependency>
        -->

        <!-- WEB -->

        <dependency>
            <groupId>ch.vd.formation</groupId>
            <artifactId>refedu-shared-xsd</artifactId>
            <version>${refedu-shared-xsd-version}</version>
        </dependency>


        <!-- org.springframework.boot-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>  <!-- OK -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>  <!-- OK -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- ESB -->
        <dependency>
            <groupId>ch.vd.technical.esb</groupId>
            <artifactId>esb-client-spring-boot-starter</artifactId>
            <version>5.4.1</version>
        </dependency>

        <!-- ESB: Starter pour obtenir la ConnectionFactory vers activeMQ-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-activemq</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics</artifactId>
            <version>${jaxb2-version}</version>
        </dependency>
        <dependency>
            <groupId>org.jvnet.jaxb2_commons</groupId>
            <artifactId>jaxb2-basics-annotate</artifactId>
            <version>${jaxb2-basics-annotate-version}</version>
        </dependency>

        <!-- api client esb -->
        <!--<dependency>-->
        <!--<groupId>ch.vd.technical.esb</groupId>-->
        <!--<artifactId>esb-client</artifactId>-->
        <!--<version>5.2</version>-->
        <!--</dependency>-->

        <!-- api validation xml, obligatoire pour l'envoi de messages -->
        <!--<dependency>-->
        <!--<groupId>ch.vd.technical.esb</groupId>-->
        <!--<artifactId>esb-validation</artifactId>-->
        <!--<version>5.2</version>-->
        <!--</dependency>-->

        <!-- api client esb -->
        <!--<dependency>-->
        <!--<groupId>ch.vd.technical.esb</groupId>-->
        <!--<artifactId>esb-client-test</artifactId>-->
        <!--<version>5.2</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->

        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        -->

        <!-- SECURITY -->

        <!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        -->

        <dependency> <!-- OK -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
        </dependency>

        <dependency>  <!-- OK -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-taglibs</artifactId>
            <version>5.3.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>4.1.2</version>
        </dependency>

        <!-- VD -->
        <dependency>
            <groupId>ch.vd.pee</groupId>
            <artifactId>pee-shared-base</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.vd.shared</groupId>
            <artifactId>shared-iam</artifactId>
        </dependency>

        <!-- LOGS & MONITOR -->

        <dependency> <!-- OK -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
        </dependency>
        <!-- javamelody-core -->
        <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>1.85.0</version>
        </dependency>
        <!-- itext, option to add PDF export -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.13.1</version>
            <exclusions>
                <exclusion>
                    <artifactId>bcmail-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>bcprov-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>bctsp-jdk14</artifactId>
                    <groupId>bouncycastle</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.11.1</version>
        </dependency>

        <!-- TOOLS AND TOOLKITS -->

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.11</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.7</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>29.0-jre</version>
        </dependency>

        <dependency>
            <groupId>org.mozilla</groupId>
            <artifactId>rhino</artifactId>
            <version>1.7.12</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>3.0.0</version>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-boot-starter</artifactId>
            <version>3.0.0</version>
        </dependency>

        <!-- DB -->

        <dependency>
            <groupId>oracle.jdbc</groupId>
            <artifactId>ojdbc7</artifactId>
            <!--version 12.1.0.2.0-->
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-oracle</artifactId>
            <version>1.2.1.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>com.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>3.4.5</version>
            <scope>compile</scope>
        </dependency>

        <!-- TESTS  & DEV -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency> <!-- OK -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.10.19</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.16.1</version>
            <scope>test</scope>
        </dependency>

        <dependency> <!-- OK -->
            <groupId>ch.vd.pee</groupId>
            <artifactId>pee-shared-testing</artifactId>
            <version>${pee-shared-testing.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.200</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-rhino</artifactId>
            <version>1.2.6</version>
            <scope>test</scope>
        </dependency>

        <!-- Lombok dependencies -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${org.mapstruct.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ch.vd.pee</groupId>
                <artifactId>pee-shared-base</artifactId>
                <version>${pee-shared-base.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.jencks</groupId>
                        <artifactId>jencks</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.tranql</groupId>
                        <artifactId>tranql-connector-oracle-common</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>ch.vd.shared</groupId>
                <artifactId>shared-iam</artifactId>
                <version>${shared-iam.version}</version>
            </dependency>
            <dependency>
                <groupId>oracle.jdbc</groupId>
                <artifactId>ojdbc7</artifactId>
                <version>${oracle.jdbc}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <showDeprecation>true</showDeprecation>
                    <encoding>UTF-8</encoding>

                    <!-- Lombok - MapStruct-->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${org.mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <dependency>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </dependency>
                    </annotationProcessorPaths>

                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--
                mvn spring-boot:run -Drun.jvmArguments="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
                -->
                <!--
                 <configuration>
                     <jvmArguments>
                         -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005
                     </jvmArguments>
                 </configuration>
                -->
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.2</version>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Manifest-Version>${project.version}</Manifest-Version>>
                            <Application-Version>${project.version}</Application-Version>
                            <Archiver-Version>Plexus Archiver</Archiver-Version>
                            <Created-By>Apache Maven</Created-By>
                            <Built-By>${user.name}</Built-By>
                            <Build-Jdk>${java.version}</Build-Jdk>
                        </manifestEntries>
                    </archive>
                    <warSourceExcludes>META-INF/*.xml</warSourceExcludes>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warName>inextaweb</warName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>runbatchfile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>browserifyScript.${scriptExtension}</executable>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.1.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Properties management for relevDomainXSD
                 Generate Java classes from XSD during build -->
            <!--<plugin>-->
            <!--<groupId>org.jvnet.jaxb2.maven2</groupId>-->
            <!--<artifactId>maven-jaxb22-plugin</artifactId>-->
            <!--<version>${maven-jaxb2-plugin-version}</version>-->
            <!--<configuration>-->
            <!--<extension>true</extension>-->
            <!--<schemaDirectory>${basedir}/src/main/resources/xsd</schemaDirectory>-->
            <!--<generateDirectory>${basedir}/target/generated/src/main/java</generateDirectory>-->
            <!--<removeOldOutput>true</removeOldOutput>-->
            <!--<bindingDirectory>${basedir}/src/main/resources/bindings</bindingDirectory>-->
            <!--<args>-->
            <!--&lt;!&ndash; Generate toString, equals, hashCode methods &ndash;&gt;-->
            <!--&lt;!&ndash; <arg>-XtoString-toStringStrategyClass=ch.vd.formation.refedu.xmlns.adapter.RefEduJAXBToStringStrategy</arg> &ndash;&gt;-->
            <!--<arg>-XtoString</arg>-->
            <!--<arg>-Xequals</arg>-->
            <!--<arg>-XhashCode</arg>-->
            <!--<arg>-Xannotate</arg>-->
            <!--&lt;!&ndash;<arg>-Xdigest</arg>&ndash;&gt;-->

            <!--&lt;!&ndash; This helps generate setter methods&ndash;&gt;-->
            <!--&lt;!&ndash;<arg>-npa</arg>&ndash;&gt;-->
            <!--<arg>-Xcollection-setter-injector</arg>-->

            <!--</args>-->

            <!--<plugins>-->
            <!--<plugin>-->
            <!--<groupId>org.jvnet.jaxb2_commons</groupId>-->
            <!--<artifactId>jaxb2-basics</artifactId>-->
            <!--<version>${jaxb2-version}</version>-->
            <!--</plugin>-->
            <!--<plugin>-->
            <!--<groupId>org.jvnet.jaxb2_commons</groupId>-->
            <!--<artifactId>jaxb2-basics-annotate</artifactId>-->
            <!--<version>${jaxb2-basics-annotate-version}</version>-->
            <!--</plugin>-->

            <!--&lt;!&ndash; plugin to generate setter for collection&ndash;&gt;-->
            <!--<plugin>-->
            <!--<groupId>net.java.dev.vcc.thirdparty</groupId>-->
            <!--<artifactId>collection-setter-injector</artifactId>-->
            <!--<version>0.5.0-1</version>-->
            <!--</plugin>-->

            <!--</plugins>-->
            <!--</configuration>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<phase>generate-sources</phase>-->
            <!--<goals>-->
            <!--<goal>generate</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<schemaIncludes>-->
            <!--<include>multigrammaire/*.xsd</include>-->
            <!--<include>response/bilanTraitement/**/*.xsd</include>-->
            <!--<include>response/enseignant/**/*.xsd</include>-->
            <!--<include>response/eleve/**/*.xsd</include>-->
            <!--&lt;!&ndash;<include>response/eleveFP/**/*.xsd</include>&ndash;&gt;-->
            <!--<include>response/donneePersonnelle/**/*.xsd</include>-->

            <!--<include>request/domain/**/**/*.xsd</include>-->
            <!--<include>request/faitmarquant/**/**/*.xsd</include>-->

            <!--<include>response/nomenclature/**/*.xsd</include>-->

            <!--&lt;!&ndash;<include>upi/**/*.xsd</include>&ndash;&gt;-->
            <!--<include>schemarefinf/**/*.xsd</include>-->
            <!--<include>schemaupi/**/*.xsd</include>-->
            <!--</schemaIncludes>-->
            <!--<schemaExcludes>-->
            <!--<include>request/faitmarquant/rcpersonne/**/*.xsd</include>-->
            <!--</schemaExcludes>-->

            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--<dependencies>-->
            <!--<dependency>-->
            <!--<groupId>org.jvnet.jaxb2_commons</groupId>-->
            <!--<artifactId>jaxb2-basics</artifactId>-->
            <!--<version>${jaxb2-version}</version>-->
            <!--</dependency>-->

            <!--<dependency>-->
            <!--<groupId>org.jvnet.jaxb2_commons</groupId>-->
            <!--<artifactId>jaxb2-basics-annotate</artifactId>-->
            <!--<version>${jaxb2-basics-annotate-version}</version>-->
            <!--</dependency>-->

            <!--</dependencies>-->
            <!--</plugin>-->

            <!-- Add generated sources - avoids having to copy generated sources to
                build location -->
            <!--<plugin>-->
            <!--<groupId>org.codehaus.mojo</groupId>-->
            <!--<artifactId>build-helper-maven-plugin</artifactId>-->
            <!--<version>${build-helper-maven-plugin.version}</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<id>add-source</id>-->
            <!--<phase>generate-sources</phase>-->
            <!--<goals>-->
            <!--<goal>add-source</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--<sources>-->
            <!--<source>${basedir}/target/generated/src/main/java</source>-->
            <!--</sources>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->

            <!--
            Deploiement
            -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-jsch</artifactId>
                        <version>${ant-jsch-version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
                <executions>
                    <!--echo-deploy-->
                    <execution>
                        <id>echo-deploy</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!--<echo>============== Environnement = ${environnement} ============= </echo>-->
                                <echo>============== tomcat.server.domain.name =
                                    ${tomcat.server.domain.name}=============
                                </echo>
                            </tasks>
                        </configuration>
                    </execution>

                    <!--deploy-application-tomcat-->
                    <execution>
                        <id>deploy-application-tomcat</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo>DEPLOIEMENENT SUR L'ENVIRONEMENT TOMCAT</echo>
                                <echo>************ ${dist.app.name}.zip</echo>
                                <echo>************ ${tomcat.app.dir}.zip</echo>
                                <echo>************ ${tomcat.applications.dir}.zip</echo>
                                <echo>************</echo>
                                <echo>************ ${tomcat.server.host}</echo>
                                <echo>************ ${tomcat.server.username}</echo>
                                <echo>************ ${tomcat.server.password}</echo>
                                <echo>************</echo>
                                <echo>************ ${tomcat.delivery.dir}/${dist.app.name}.zip</echo>
                                <echo>************ ${tomcat.app.dir}/${dist.app.name}</echo>
                                <echo>************ ${tomcat.applications.dir}</echo>

                                <!-- Definition de la command ssh -->
                                <macrodef name="ssh">
                                    <attribute name="command" default="NOT SET"/>
                                    <attribute name="failonerror" default="true"/>
                                    <sequential>
                                        <sshexec host="${tomcat.server.host}" username="${tomcat.server.username}"
                                                 password="${tomcat.server.password}" trust="true"
                                                 failonerror="@{failonerror}" command="@{command}"/>
                                    </sequential>
                                </macrodef>

                                <echo>Nettoyage avant tout déploiement</echo>
                                <ssh command="rm -f ${tomcat.delivery.dir}/${dist.app.name}.zip"/>
                                <ssh command="rm -rf ${tomcat.app.dir}/${dist.app.name}"/>
                                <ssh command="rm -f ${tomcat.applications.dir}"/>

                                <echo>Arret du serveur tomcat</echo>
                                <ssh command="${tomcat.command} stop ${tomcat.instance}"/>
                                <!-- Debug
                                        <echo>${tomcat.server.username}:${tomcat.server.password}@${tomcat.server.host}:${tomcat.delivery.dir}</echo>
                                        -->
                                <echo>Copie de l archive : ${local.distribution.artifact.file}</echo>
                                <scp file="${local.distribution.artifact.file}"
                                     todir="${tomcat.server.username}:${tomcat.server.password}@${tomcat.server.host}:${tomcat.delivery.dir}"
                                     sftp="true" trust="true" verbose="true" failonerror="true"/>

                                <echo>extraction de l archive</echo>
                                <ssh command="unzip -o ${tomcat.delivery.dir}/${dist.app.name}.zip -d ${tomcat.app.dir}"/>

                                <echo>Creation du lien symbolique : ${tomcat.app.dir}/${dist.app.name}
                                    ${tomcat.applications.dir}
                                </echo>
                                <ssh command="ln -s ${tomcat.app.dir}/${dist.app.name} ${tomcat.applications.dir}"/>

                                <!--
                                <echo>Copie le fichier context</echo>
                                <scp file="appDir/${assembly.env}/servicesfp/formation#int-prestationsfp.xml"
                                     todir="${tomcat.server.username}:${tomcat.server.password}@${tomcat.server.host}:${tomcat.server.instance}/servers/${tomcat.instance}/conf/Catalina/localhost/"
                                     sftp="true" trust="true" verbose="true" failonerror="true"/>
                                -->

                                <echo>Nettoyage des fichiers temporaires tomcat</echo>
                                <ssh command="${tomcat.command} clean ${tomcat.instance}"/>

                                <echo>Demarrage des instances tomcat</echo>
                                <ssh command="${tomcat.command} start ${tomcat.instance}"/>

                            </tasks>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
        </plugins>
    </build>

</project>