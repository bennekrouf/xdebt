<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ch.vd.justice.shared</groupId>
        <artifactId>shared-parent</artifactId>
        <version>24.2.3</version>
    </parent>

    <artifactId>shared-maven</artifactId>
    <packaging>pom</packaging>

    <description>Parent POM to use for eGDx applications</description>

    <properties>
        <!-- most properties are inherited from parent -->
        
        <spring.it.config.location>MUST_BE_SPECIFIED_ON_COMMAND_LINE</spring.it.config.location>
    </properties>

    <dependencyManagement>
        <!--dependencyManagement is inherited from parent -->
    </dependencyManagement>


    <dependencies>
        <!-- Logging is inherited from parent -->

        <!-- Tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apiguardian</groupId>
            <artifactId>apiguardian-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.surefire</groupId>
            <artifactId>surefire-logger-api</artifactId>
            <!-- to get around bug https://github.com/junit-team/junit5/issues/1367 -->
            <scope>test</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- running integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>default-integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <reuseForks>${maven.failsafe.reuseForks}</reuseForks>

                        <!-- spring.it.config.location: specify folder containing application.properties
                            for IT tests -->
                        <argLine>${tests.integration.arg.line}
                            -DSPRING_IT_CONFIG_LOCATION=${spring.it.config.location}
                        </argLine>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>smoke-test</id>
            <activation>
                <!-- only activate when having -Dsmoke-test -->
                <property><name>smoke-test</name></property>
            </activation>
            <build>
                <plugins>
                    <!-- running only "smoke" integration tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>**/*SmokeIntegration</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <profile>
            <id>code-coverage</id>
            <properties>
                <spring.it.config.location>MUST_BE_SPECIFIED_ON_COMMAND_LINE</spring.it.config.location>
                <codeCoverageArgLine/>
                <sonar.jacoco.reportPath>target/jacoco.exec</sonar.jacoco.reportPath>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <!-- @ allows late replacement of properties when the plugin is executed -->
                            <argLine>@{codeCoverageArgLine} ${tests.unit.arg.line}</argLine>
                        </configuration>
                    </plugin>

                    <!-- running integration tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <includes>
                                <!-- these are plugin's default -->
                                <include>**/IT*.java</include>
                                <include>**/*IT.java</include>
                                <include>**/*ITCase.java</include>

                                <!-- This is our specific convention: these test will be run in
                                    both nightly pipeline and main build pipeline (aka master build) -->
                                <include>**/*SmokeTest</include>
                            </includes>
                            <!-- (default is true) this is to avoid failing tests due to shared
                                variable (ex: caches) disabling reuse-forks will make tests run a bit longer,
                                but less fragile. -->
                            <reuseForks>false</reuseForks>

                            <!-- spring.it.config.location: specify folder containing application.properties
                                for IT tests -->
                            <argLine>@{codeCoverageArgLine} ${tests.integration.arg.line}
                                -DSPRING_IT_CONFIG_LOCATION=${spring.it.config.location}
                            </argLine>
                            <runOrder>alphabetical</runOrder>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <destFile>${sonar.jacoco.reportPath}</destFile>
                            <dataFile>${sonar.jacoco.reportPath}</dataFile>
                            <append>true</append>
                        </configuration>

                        <executions>
                            <execution>
                                <id>agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <configuration>
                                    <propertyName>codeCoverageArgLine</propertyName>
                                    <destFile>${sonar.jacoco.reportPath}</destFile>
                                </configuration>
                            </execution>

                            <execution>
                                <id>merge-results</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${project.build.directory}</directory>
                                            <includes>
                                                <include>*.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>
                                        ${maven.multiModuleProjectDirectory}/${sonar.jacoco.reportPath}
                                    </destFile>
                                </configuration>
                            </execution>

                            <execution>
                                <id>report-aggregate</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report-aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
  
