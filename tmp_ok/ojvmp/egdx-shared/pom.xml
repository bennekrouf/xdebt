<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!-- update regularly to latest version to have latest security fixes -->
        <version>2.7.18</version>
        <!-- lookup parent from repository -->
        <relativePath/>
    </parent>

    <groupId>ch.vd.justice.shared</groupId>
    <artifactId>shared-parent</artifactId>
    <version>24.2.3</version>
    <packaging>pom</packaging>

    <name>${project-name.prefix}${project.artifactId}</name>
    <description>The parent pom for shared libraries</description>

    <modules>
        <module>shared-application</module>
        <module>shared-angular</module>
        <module>shared-boot-backend</module>
        <module>shared-domain</module>
        <module>shared-frontend-adapter</module>
        <module>shared-jms</module>
        <module>shared-maven</module>
        <module>shared-security</module>
        <module>shared-spring</module>
        <module>shared-test</module>
        <module>shared-persistence</module>
        <module>shared-esb-adapter</module>
        <module>shared-persistence-xa</module>
        <module>shared-moteur-fusion-adapter-impl</module>
        <module>shared-batch-adapter</module>
        <module>shared-generator</module>
    </modules>

    <distributionManagement>
        <repository>
            <id>${distribution.release.server.id}</id>
            <url>${repo.justice.release.url}</url>
        </repository>
        <snapshotRepository>
            <id>${distribution.snapshot.server.id}</id>
            <url>${repo.justice.snapshot.url}</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <!-- To allow smooth integration in ELCA environments -->
        <project-name.prefix/>
        <!-- ${project.version} doesn't seem to work - it takes the version
        of the project being built (that depends on this), not the version in this pom -->
        <shared.version>24.2.3</shared.version>

        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- libraries' version. To ease version update job and reduce merge conflict,
            please sort properties in alphabetical order. -->
        <atomikos.version>5.0.108</atomikos.version>
        <commons.collection4.version>4.4</commons.collection4.version>
        <commons.fileupload.version>1.4</commons.fileupload.version>

        <cxf.version>3.5.2</cxf.version>

        <graphql.java.version>18.1</graphql.java.version>
        <graphql.spring-boot.version>12.0.0</graphql.spring-boot.version>

        <guava.version>31.1-jre</guava.version>
        <gmavenplus-plugin.version>3.0.2</gmavenplus-plugin.version>
        <!--Should be migrated to last 2.0.1 Updates for the compatibility with Hazelcast 4.0-->
        <hazelcast.eureka.version>2.0.1</hazelcast.eureka.version>


        <!-- Spring Boot's version is 3.7.8 -->
        <!--<hazelcast.version>3.12.4</hazelcast.version>-->


        <!-- used by external script to get the correct jacoco agent version -->
        <jacoco.version>0.8.5</jacoco.version>
        <!-- overriding jackson-bom's version (2.8.11.20181123, implied by spring-boot's jackson-version) to avoid CVE-2018-1000873 on jackson databind -->
        <!-- this is necessary because else jacksons.databind.version is not imported -->
        <jackson.databind.version>2.13.3</jackson.databind.version>


        <junit.apiguardian.version>1.1.2</junit.apiguardian.version>
        <!--last version is 5.8.2-->
        <junit5.bom.version>5.8.2</junit5.bom.version>
        <spock-bom.version>2.4-M1-groovy-4.0</spock-bom.version>
        <wiremock.pom.version>2.35.2</wiremock.pom.version>

        <oracle.driver.version>21.4.0.0.1</oracle.driver.version>

        <rxnetty.version>0.4.19</rxnetty.version>
        <!-- Probably, we should add a dependency to spring-cloud-dependencies instead -->
        <spring.cloud.netflix.starter.version>3.1.3</spring.cloud.netflix.starter.version>

        <!-- use latest version of versions plugin (default spring boot version is 2.2) -->
        <versions-maven-plugin.version>2.15.0</versions-maven-plugin.version>
        <maven.surefire.version>3.0.0</maven.surefire.version>
        <xstream.version>1.4.19</xstream.version>

        <shared-iam.version>6.0.2</shared-iam.version>

        <!-- see https://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html -->
        <argLine>-Dfile.encoding=UTF-8</argLine>
        <tests.unit.arg.line>-Xmx512m -Dfile.encoding=UTF-8</tests.unit.arg.line>
        <tests.integration.arg.line>-Xmx1024m -Dfile.encoding=UTF-8</tests.integration.arg.line>
        <maven.failsafe.reuseForks>true</maven.failsafe.reuseForks>
        <it.skip>true</it.skip>
        <!-- Disabled to avoid over-quality. Can be re-enabled if desired -->
        <dependency-check-maven.skip>true</dependency-check-maven.skip>
        <dependency-check.suppressionFile>suppress-cves.xml</dependency-check.suppressionFile>
        <!-- Apache CXF version for RCPers-->
        <rcpers.apache.cxf.version>3.3.5</rcpers.apache.cxf.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Own modules -->
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-application</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-domain</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-frontend-adapter</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-frontend-adapter</artifactId>
                <version>${shared.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-jms</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-security</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-spring</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-persistence</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-persistence</artifactId>
                <version>${shared.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-persistence-xa</artifactId>
                <version>${shared.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-test</artifactId>
                <version>${shared.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-esb-adapter</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-boot-backend</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-moteur-fusion-adapter-impl</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-persistence-xa</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.vd.justice.shared</groupId>
                <artifactId>shared-batch-adapter</artifactId>
                <version>${shared.version}</version>
            </dependency>
            <!-- IAM -->
            <dependency>
                <groupId>ch.vd.shared</groupId>
                <artifactId>shared-iam</artifactId>
                <version>${shared-iam.version}</version>
            </dependency>

            <!-- Apache commons not included in Spring boot parent dependencies -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collection4.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>5.2.2</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>5.2.2</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>2.9.3</version>
            </dependency>

            <!-- GraphQL -->
            <dependency>
                <groupId>com.graphql-java-kickstart</groupId>
                <artifactId>graphql-spring-boot-starter</artifactId>
                <version>${graphql.spring-boot.version}</version>
                <!-- graphql-spring-boot-starter depends on version 3.0.something, but
                    version 3.1 or maybe more is embedded in tomcat-embed-core which is a dependency
                    of spring-boot-starter-web -->
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>javax.servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- to embed GraphiQL tool -->
            <dependency>
                <groupId>com.graphql-java-kickstart</groupId>
                <artifactId>graphiql-spring-boot-starter</artifactId>
                <version>${graphql.spring-boot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.graphql-java</groupId>
                <artifactId>graphql-java</artifactId>
                <version>${graphql.java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.graphql-java</groupId>
                <artifactId>graphql-java-extended-scalars</artifactId>
                <version>${graphql.java.version}</version>
            </dependency>

            <!-- for parsing arguments to main -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.5.0</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.11.0</version>
            </dependency>

            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>23.0.0</version>
                <scope>compile</scope>
            </dependency>

            <!-- Hibernate -->
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc8</artifactId>
                <!-- should match the version of the customer -->
                <version>${oracle.driver.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>5.4.33.Final</version>
            </dependency>

            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>3.3.0</version>
            </dependency>

            <!-- Tests -->
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit5.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock-jre8 -->
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock-jre8</artifactId>
                <version>${wiremock.pom.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- To avoid compiler warnings about @API annotations in JUnit code -->
            <dependency>
                <groupId>org.apiguardian</groupId>
                <artifactId>apiguardian-api</artifactId>
                <version>${junit.apiguardian.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>com.github.sbrannen</groupId>
                <artifactId>spring-test-junit5</artifactId>
                <version>1.4.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-bom</artifactId>
                <version>${spock-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <!-- adapted from spring-boot-dependencies 1.5.19.RELEASE -->
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.enterprise</groupId>
                        <artifactId>cdi-api</artifactId>
                    </exclusion>
                    <!-- cf https://discourse.hibernate.org/t/dom4j-raise-up-a-cve/1362 and
                    https://github.com/hibernate/hibernate-orm/pull/2525/commits/062ebee41a631cba.
                     Import org.dom4j instead. Should be removed when upgrading hibernate -->
                    <exclusion>
                        <groupId>dom4j</groupId>
                        <artifactId>dom4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!-- adapted from spring-boot-dependencies 1.5.19.RELEASE -->
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <!-- cf https://discourse.hibernate.org/t/dom4j-raise-up-a-cve/1362 and
                    https://github.com/hibernate/hibernate-orm/pull/2525/commits/062ebee41a631cba.
                     Import org.dom4j instead -->
                    <exclusion>
                        <groupId>dom4j</groupId>
                        <artifactId>dom4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- cf https://discourse.hibernate.org/t/dom4j-raise-up-a-cve/1362 and
            https://github.com/hibernate/hibernate-orm/pull/2525/commits/062ebee41a631cba.
             Import org.dom4j instead of dom4j -->
            <dependency>
                <groupId>org.dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>2.1.1</version>
            </dependency>

            <!-- Eureka -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${spring.cloud.netflix.starter.version}</version>
            </dependency>

            <!-- Hazelcast -->
            <dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-eureka-one</artifactId>
                <version>${hazelcast.eureka.version}</version>
            </dependency>

            <!-- Utilities -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- Security Overrides -->
            <!-- Because of CVE-2017-17485, CVE-2018-5968 -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.databind.version}</version>
            </dependency>
            <!-- To upgrade Netty, Because of CVE-2015-2156, CVE-2016-4970, CVE-2014-3488 -->
            <dependency>
                <groupId>io.reactivex</groupId>
                <artifactId>rxnetty</artifactId>
                <version>${rxnetty.version}</version>
            </dependency>
            <!-- Because of CVE-2017-7957 -->
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>
            <!-- Because of CVE-2016-1000031 and CVE-2016-3092 -->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons.fileupload.version}</version>
            </dependency>

            <!-- Because of CVE-2016-1000341, CVE-2016-1000352, CVE-2016-1000340, CVE-2018-1000613, CVE-2016-1000339, CVE-2016-1000346, CVE-2016-1000338, CVE-2017-13098, CVE-2016-1000343, CVE-2018-1000180, CVE-2016-1000342, CVE-2016-1000345, CVE-2016-1000344 -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>1.70</version>
            </dependency>
            <!-- Because of CVE-2016-4977, CVE-2018-1260, CVE-2012-5055, CVE-2018-15758, CVE-2011-2732, CVE-2011-2731 -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-rsa</artifactId>
                <version>1.0.11.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-core</artifactId>
                <version>1.19.4</version>
            </dependency>
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-client</artifactId>
                <version>1.19.4</version>
            </dependency>
            <dependency>
                <groupId>com.sun.jersey.contribs</groupId>
                <artifactId>jersey-apache-client4</artifactId>
                <version>1.19.4</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-logger-api</artifactId>
                <version>${maven.surefire.version}</version>
                <!-- to get around bug https://github.com/junit-team/junit5/issues/1367 -->
                <scope>test</scope>
                <optional>true</optional>
            </dependency>

            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-features-logging</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-bindings-soap</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-security</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <!--JavaMail version 1.5.6 should be used-->
                    <exclusion>
                        <groupId>org.apache.geronimo.javamail</groupId>
                        <artifactId>geronimo-javamail_1.4_mail</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- CXF for RCPers-->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>${rcpers.apache.cxf.version}</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <!-- keep version aligned the one inherited from spring-boot-dependencies -->
                <exclusions>
                    <exclusion>
                        <!-- we want to continue using tomcat JDBC connection pool because its configuration is exposed -->
                        <!-- note: another option would have been to set property spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource, but it is cleaner to remove the dependency to hikari which is not used. -->
                        <groupId>com.zaxxer</groupId>
                        <artifactId>HikariCP</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.6.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <!-- version 3.0.0 seems to occasionally pose problems in eclipse -->
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.0.0</version>
                    <configuration>
                        <failOnMissing>true</failOnMissing>
                        <!-- <useMissingFile>true</useMissingFile> -->
                        <overrideUrl>file:license/override-THIRD-PARTY.properties</overrideUrl>
                        <fileTemplate>license/third-party-file.ftl</fileTemplate>
                        <licenseMergesUrl>file:license/license-merges.txt</licenseMergesUrl>
                        <outputDirectory>license</outputDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>3.4.0.905</version>
                </plugin>

                <!-- running unit tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                    <configuration>
                        <!-- don't use argLine: see https://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html -->

                        <!-- to have stacktrace printed in jenkins build console -->
                        <trimStackTrace>false</trimStackTrace>
                        <excludes>
                            <exclude>**/IT*.java</exclude>
                            <exclude>**/*IT.java</exclude>
                            <exclude>**/*ITCase.java</exclude>
                            <exclude>**/*SmokeTest</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <!-- running integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                    <configuration>
                        <!-- don't use argLine: see https://www.eclemma.org/jacoco/trunk/doc/prepare-agent-mojo.html -->

                        <!-- to have stacktrace printed in jenkins build console -->
                        <trimStackTrace>false</trimStackTrace>
                        <!-- 0: wait forever -->
                        <!-- control this in pipeline script via -Dsurefire.timeout -->
                        <!-- <forkedProcessTimeoutInSeconds>600</forkedProcessTimeoutInSeconds> -->
                    </configuration>
                </plugin>

                <!-- code coverage -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-xjc-plugin</artifactId>
                    <version>3.2.3</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-codegen-plugin</artifactId>
                    <version>${cxf.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-wadl2java-plugin</artifactId>
                    <version>${rcpers.apache.cxf.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>5.3.2</version>
                <dependencies>
                    <dependency>
                        <groupId>com.oracle.database.jdbc</groupId>
                        <artifactId>ojdbc8</artifactId>
                        <version>${oracle.driver.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!-- keep the following configurations synchronized over all projects -->
                    <suppressionFile>${dependency-check.suppressionFile}</suppressionFile>
                    <skip>${dependency-check-maven.skip}</skip>

                    <cveValidForHours>${dependency-check.cveValidForHours}</cveValidForHours>
                    <failBuildOnCVSS>${dependency-check.failBuildOnCVSS}</failBuildOnCVSS>
                    <failOnError>${dependency-check.failOnError}</failOnError>

                    <mavenSettingsProxyId>${dependency-check.mavenSettingsProxyId}</mavenSettingsProxyId>

                    <artifactoryAnalyzerEnabled>${dependency-check.artifactoryAnalyzerEnabled}
                    </artifactoryAnalyzerEnabled>
                    <artifactoryAnalyzerServerId>${dependency-check.artifactoryAnalyzerServerId}
                    </artifactoryAnalyzerServerId>
                    <artifactoryAnalyzerUrl>${dependency-check.artifactoryUrl}</artifactoryAnalyzerUrl>
                    <nexusAnalyzerEnabled>${dependency-check.nexusAnalyzerEnabled}</nexusAnalyzerEnabled>
                    <nexusUrl>${dependency-check.nexusUrl}</nexusUrl>
                    <nexusUsesProxy>${dependency-check.nexusUsesProxy}</nexusUsesProxy>
                    <centralAnalyzerEnabled>${dependency-check.centralAnalyzerEnabled}</centralAnalyzerEnabled>

                    <databaseDriverName>${dependency-check.databaseDriverName}</databaseDriverName>
                    <connectionString>${dependency-check.connectionString}</connectionString>
                    <databaseUser>${dependency-check.read.databaseUser}</databaseUser>
                    <databasePassword>${dependency-check.update.databasePassword}</databasePassword>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>aggregate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test</include>
                        <include>**/*Spec</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dgnsi</id>
            <properties>
                <!-- allow customization of nexus URL -->
                <repo.justice.release.url>${nexus.url.releases}</repo.justice.release.url>
                <repo.justice.snapshot.url>${nexus.url.snapshots}</repo.justice.snapshot.url>
            </properties>
            <modules>
                <module>shared-generator</module>
            </modules>
        </profile>
    </profiles>

</project>