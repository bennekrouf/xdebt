<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>cadero-web</artifactId>
	<packaging>war</packaging>
	<!-- prefix prj_ev_cadero is for sonar -->
	<name>prj_ev_cadero Cadero :: Front</name>

	<parent>
		<groupId>ch.gremmi.cadero</groupId>
		<artifactId>cadero-parent</artifactId>
		<version>2.2.4</version>
		<relativePath>..</relativePath>
	</parent>

	<properties>
		<CATALINA_HOME>D:\projects\cadero\Tools\apache-tomcat-6.0.33</CATALINA_HOME>
		<maven.cadero.web.firstFilter></maven.cadero.web.firstFilter>
	</properties>

	<dependencies>
		<!-- SPRING SECURITY -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-faces</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.gremmi.cadero</groupId>
			<artifactId>cadero-core</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>javax.servlet.jsp-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>javax.faces-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
		</dependency>
		<dependency>
			<groupId>org.richfaces</groupId>
			<artifactId>richfaces</artifactId>
		</dependency>
		<!-- Migration technique 2019: This should not be needed, because Tomcat provides an EL implementation. Unfortunately,
				CaderoWebappResourceHelper uses internal classes from com.sun.* This class is not registered if we do not use the following
				EL implementation. -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.el</artifactId>
		</dependency>
		<!-- Migration technique 2019: We do not use CDI, but JSF >= 2.2 requires it. For some reason, this is
				not being resolved as a transitive dependency by Maven, so this dependency was added.
				See also: https://stackoverflow.com/a/28267581 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.vd</groupId>
			<artifactId>ati-security</artifactId>
			<version>3.0.1</version>
		</dependency>

		<!-- Enable caching & Gzip encoding in web application -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-web</artifactId>
		</dependency>

	</dependencies>

	<build>
		<finalName>${cadero.name}</finalName>
		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>




		<plugins>

			<!-- WAR configuration -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<warName>${cadero.name}</warName>
					<!-- to remove a warning (the web.xml file is included anyway): [WARNING] 
						Warning: selected war files include a WEB-INF/web.xml which will be ignored 
						(webxml attribute is missing from war task, or ignoreWebxml attribute is 
						specified as 'true') -->
					<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
					<!-- to replace the ${maven.cadero.dir.suffix} variable -->
					<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
					<webResources>
						<!-- to replace the ${project.version} variable -->
						<resource>
							<directory>src/main/webapp/admin-deploy</directory>
							<targetPath>admin-deploy</targetPath>
							<filtering>true</filtering>
							<includes>
								<include>index.jsp</include>
							</includes>
						</resource>
						<!-- to replace the ${maven.cadero.dir.suffix} variable -->
						<resource>
							<directory>src/main/resources</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<filtering>true</filtering>
							<includes>
								<include>cadero-external-config.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- CARGO plugin, an alternatively way to run CADERO inside. -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.1.3</version>
				<configuration>
					<wait>true</wait>
					<container>
						<containerId>tomcat6x</containerId>
						<home>${CATALINA_HOME}</home>
						<type>installed</type>
					</container>
					<configuration>
						<home>${CATALINA_HOME}</home>
						<type>existing</type>
						<properties>
							<cargo.servlet.port>8080</cargo.servlet.port>
							<cargo.jvmargs>-agentlib:jdwp=transport=dt_socket,address=localhost:8000,server=y,suspend=n</cargo.jvmargs>
						</properties>
					</configuration>
					<deployer>
						<type>installed</type>
						<deployables>
							<!-- This deployable specifies the webapp you want to deploy -->
							<deployable>
								<location>${basedir}/target/${cadero.name}.war</location>
							</deployable>
						</deployables>
					</deployer>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpmanifest>true</wtpmanifest>
					<wtpversion>2.0</wtpversion>
					<wtpContextName>territoire/cadero</wtpContextName>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- IAM setup (+ removes DEV config) -->
		<profile>
			<id>IAM</id>

			<build>
				<plugins>
					<!-- WAR configuration -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<warSourceExcludes>WEB-INF/security/securityContext-DEV.xml,*.html</warSourceExcludes>
							<!-- to replace the ${maven.cadero.dir.suffix} variable -->
							<webResources>
								<resource>
									<directory>src/main/webapp/WEB-INF</directory>
									<targetPath>WEB-INF</targetPath>
									<filtering>true</filtering>
									<includes>
										<include>web.xml</include>
									</includes>
								</resource>
								<resource>
									<directory>src/main/resources</directory>
									<targetPath>WEB-INF/classes</targetPath>
									<filtering>true</filtering>
									<includes>
										<include>cadero-external-config.xml</include>
									</includes>
								</resource>
								<resource>
									<directory>../etc/IAM</directory>
									<targetPath>WEB-INF/security</targetPath>
									<filtering>false</filtering>
									<includes>
										<include>securityContext-IAM.xml</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>javamelody</id>
			<!-- http://code.google.com/p/javamelody/ -->
			<!-- http://code.google.com/p/javamelody/wiki/UserGuide#Dependencies -->
			<dependencies>
				<!-- javamelody-core -->
				<dependency>
					<groupId>net.bull.javamelody</groupId>
					<artifactId>javamelody-core</artifactId>
					<version>1.37.0</version>
				</dependency>
				<!-- itext, option to add PDF export -->
				<dependency>
					<groupId>com.lowagie</groupId>
					<artifactId>itext</artifactId>
					<version>2.1.7</version>
					<exclusions>
						<exclusion>
							<artifactId>bcmail-jdk14</artifactId>
							<groupId>bouncycastle</groupId>
						</exclusion>
						<exclusion>
							<artifactId>bcprov-jdk14</artifactId>
							<groupId>bouncycastle</groupId>
						</exclusion>
						<exclusion>
							<artifactId>bctsp-jdk14</artifactId>
							<groupId>bouncycastle</groupId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>


			<properties>
				<maven.cadero.web.firstFilter><![CDATA[ -->
    <context-param>
        <param-name>javamelody.datasources</param-name>
        <!-- note: should be "java:comp/env/jdbc/cadero", but this was to late to change -->
        <param-value>java:comp/env/jdbc.cadero</param-value>
    </context-param>
    <filter>
        <filter-name>monitoring</filter-name>
        <filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
        <async-supported>true</async-supported>
    </filter>
    <filter-mapping>
        <filter-name>monitoring</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <listener>
        <listener-class>net.bull.javamelody.SessionListener</listener-class>
    </listener>
    <!-- ]]></maven.cadero.web.firstFilter>
			</properties>

		</profile>
	</profiles>

</project>