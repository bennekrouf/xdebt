<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>cadero-core</artifactId>
	<packaging>jar</packaging>
	<!-- prefix prj_ev_cadero is for sonar -->
	<name>prj_ev_cadero Cadero :: Core</name>

	<parent>
		<groupId>ch.gremmi.cadero</groupId>
		<artifactId>cadero-parent</artifactId>
		<version>2.2.4</version>
		<relativePath>..</relativePath>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<packageName.xmlElement>ch.gremmi.cadero.export.bom</packageName.xmlElement>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
		</dependency>

		<!-- SPRING SECURITY -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>

		<!-- HIBERNATE -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency> <!-- slf4j is used by Hibernate, but we will tell it to redirect to log4j -->
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc7</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-shapefile</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
		</dependency>


		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-swing</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-jts-wrapper</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity-tools</artifactId>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
		</dependency>

		<!-- Jasper report -->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
		</dependency>

		<!-- Fonts used in PDF reports -->
		<dependency>
			<groupId>ch.gremmi.cadero</groupId>
			<artifactId>report-fonts</artifactId>
		</dependency>

		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>woodstox-core-asl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.2</version>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>export/jasperreport/fonts.jar</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<!-- For surefire reporting -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>${basedir}/src/test/resources/test-suite.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>

			<!-- Retrieve the Git commit hash -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>retrieve-git-commit-id</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
			 		<dotGitDirectory>../.git</dotGitDirectory>
			 		<includeOnlyProperties>
			 			<includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
			 		</includeOnlyProperties>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<id>compilation</id>
						<phase>compile</phase>
						<configuration>
							<target>
								<!-- project.parent is of class org.apache.maven.model.Parent in 
									maven 3.0.3 -->
								<tstamp>
									<format property="currentDate" pattern="dd.MM.yyyy HH:mm:ss" />
								</tstamp>
								<replace file="target/classes/application.properties"
									value="${currentDate}">
									<replacetoken>@@cadero.buildDate@@</replacetoken>
								</replace>
								<replace file="target/classes/application.properties"
									value="${project.version}">
									<replacetoken>@@cadero.version@@</replacetoken>
								</replace>
								<replace file="target/classes/application.properties"
									value="${maven.cadero.dir.suffix}">
									<replacetoken>@@maven.cadero.dir.suffix@@</replacetoken>
								</replace>
								<replace file="target/classes/application.properties"
									value="${git.commit.id.abbrev}">
									<replacetoken>@@git.commit.hash@@</replacetoken>
								</replace>
							</target>
						</configuration>
						<goals>
							<goal>run</goal><!-- this is to call antrun:run -->
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- JAXB xjc plugin that invokes the xjc compiler to compile XML schema 
				into Java classes. -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jaxb2-maven-plugin</artifactId>
				<version>1.3.1</version>
				<executions>
					<execution>
						<goals>
							<goal>xjc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- The schema directory or xsd files. -->
					<schemaDirectory>${basedir}/src/main/resources/xsd</schemaDirectory>
					<!-- The package in which the source files will be generated. -->
					<packageName>${packageName.xmlElement}</packageName>
					<!-- The working directory to create the generated java source files. -->
					<outputDirectory>${project.build.directory}/generated-sources/jaxb</outputDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
						<version>2.2.4</version>
					</dependency>
					<dependency>
						<groupId>com.sun.xml.bind</groupId>
						<artifactId>jaxb-impl</artifactId>
						<version>2.2.4-1</version>
					</dependency>
					<!-- <dependency> -->
					<!-- <groupId>com.sun.xml.bind</groupId> -->
					<!-- <artifactId>jaxb-ri</artifactId> -->
					<!-- </dependency> -->
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.6,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>pl.project13.maven</groupId>
										<artifactId>git-commit-id-plugin</artifactId>
										<versionRange>[3.0.0,)</versionRange>
										<goals>
											<goal>revision</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- specific config for continuous integration environment -->
		<profile>
			<id>jenkins</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<configuration>
									<target>
										<dependencyfilesets />

										<property name="name-version" value="${cadero.name}-${cadero.release}" />
										<property name="etc.jenkins.dir" value="../etc/jenkins" />

										<!-- clean folders -->
										<delete includeemptydirs="true" quiet="true">
											<fileset dir="${project.build.directory}/${name-version}/"
												includes="**/name-version*" />
										</delete>

										<!-- overrides -->
										<copy overwrite="true" todir="src/test/resources">
											<fileset dir="${etc.jenkins.dir}">
												<include name="cadero-overrides.properties" />
												<include name="log4j.properties" />
												<include name="scenario.properties" />
											</fileset>
										</copy>

										<!-- Clean up ant stubs -->
										<delete dir="${project.build.directory}/antrun" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal><!-- this is to call antrun:run -->
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- specific config to run all tests (= jenkins + all tests) -->
		<profile>
			<id>jenkinsFull</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<!-- <suiteXmlFiles> -->
							<!-- <suiteXmlFile>${basedir}/src/test/resources/test-suite.xml</suiteXmlFile> -->
							<!-- </suiteXmlFiles> -->
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<configuration>
									<target>
										<dependencyfilesets />

										<property name="name-version" value="${cadero.name}-${cadero.release}" />
										<property name="etc.jenkins.dir" value="../etc/jenkins" />

										<!-- clean folders -->
										<delete includeemptydirs="true" quiet="true">
											<fileset dir="${project.build.directory}/${name-version}/"
												includes="**/name-version*" />
										</delete>

										<!-- overrides -->
										<copy overwrite="true" todir="src/test/resources">
											<fileset dir="${etc.jenkins.dir}">
												<include name="cadero-overrides.properties" />
												<include name="log4j.properties" />
											</fileset>
										</copy>

										<copy overwrite="true" todir="src/test/resources">
											<fileset dir="${etc.jenkins.dir}/full">
												<include name="scenario.properties" />
												<include name="test-suite.xml" />
											</fileset>
										</copy>

										<!-- Clean up ant stubs -->
										<delete dir="${project.build.directory}/antrun" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal><!-- this is to call antrun:run -->
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>



	</profiles>
</project>