<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.gremmi.cadero</groupId>
	<artifactId>cadero-parent</artifactId>
	<version>2.2.4</version>
	<packaging>pom</packaging>
	<!-- prefix prj_ev_cadero is for sonar -->
	<name>prj_ev_cadero Cadero :: Parent</name>

	<modules>
		<module>cadero-core</module>
		<module>cadero-web</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>dd.MM.yyyy</maven.build.timestamp.format>

		<!-- VERSION MANAGEMENT FOR APPLICATION -->
		<cadero.buildtime>${maven.build.timestamp}</cadero.buildtime>
		<cadero.release>${project.version}</cadero.release>
		<cadero.name>cadero</cadero.name>
		<maven.cadero.dir.suffix>/cadero</maven.cadero.dir.suffix>
		<java.version>1.8</java.version>

		<!-- VERSION MANAGEMENT -->
		<springframework.version>4.3.22.RELEASE</springframework.version>
		<spring.security.version>4.2.11.RELEASE</spring.security.version>
		<spring.webflow.version>2.5.1.RELEASE</spring.webflow.version>
		<hibernate.version>5.4.1.Final</hibernate.version>
		<checkstyle.config.folder.location>${basedir}${file.separator}..${file.separator}etc${file.separator}checkstyle</checkstyle.config.folder.location>
		<checkstyle.suppressions.file.location>${checkstyle.config.folder.location}${file.separator}checkstyle-suppressions.xml</checkstyle.suppressions.file.location>
		<checkstyle.config.file.location>${checkstyle.config.folder.location}${file.separator}checkstyle.xml</checkstyle.config.file.location>
		<checkstyle.config.projectRelative.location>/etc/checkstyle/checkstyle.xml</checkstyle.config.projectRelative.location>
		<sonar.profile>Sonar way with Findbugs</sonar.profile>
		<sonar.host.url>http://ci.elcanet.local/sonar/</sonar.host.url>
		<!-- <sonar.exclusions>ch/elca/packageToExclude/**/*.java</sonar.exclusions> -->

		<geotools.version>8.0-RC1</geotools.version>
		<xerces.impl.version>2.12.0</xerces.impl.version>
		
		<!-- VERSION MANAGEMENT FOR JSP/JSF/RICHFACES -->
		<servlet.api.version>3.1.0</servlet.api.version>
		<jsp.api.version>2.3.3</jsp.api.version>
		<jstl.version>1.2</jstl.version>
		<richfaces.version>4.5.17.Final</richfaces.version>
		<jsf.api.version>2.3</jsf.api.version>
		<jsf.impl.version>2.3.8</jsf.impl.version>
		<el.api.version>3.0.0</el.api.version>
		<el.impl.version>${el.api.version}</el.impl.version>
		<cdi.api.version>1.2</cdi.api.version>
	</properties>

	<dependencyManagement>
		<!-- Used to specify which version of a dependency to use - this means 
			that versions are only specified here, not in sub project poms. All dependencies 
			for all modules should be listed out here -->
		<dependencies>
			<!-- CADERO module: Core -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>cadero-core</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- CADERO module: Web -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>cadero-web</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Excel reports -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi</artifactId>
				<version>3.8</version>
			</dependency>

			<!-- COMMONS -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.2.2</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.0.1</version>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.16</version>
			</dependency>

			<!-- SPRING FRAMEWORK -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${springframework.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- SPRING SECURITY -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<!-- required for security taglibs in JSF -->
			<dependency>
				<groupId>org.springframework.webflow</groupId>
				<artifactId>spring-faces</artifactId>
				<version>${spring.webflow.version}</version>
			</dependency>

			<!-- Enable caching & Gzip encoding in web application -->
			<dependency>
				<groupId>net.sf.ehcache</groupId>
				<artifactId>ehcache-web</artifactId>
				<version>2.0.4</version>
			</dependency>

			<!-- Fonts used in PDF reports -->
			<dependency>
				<groupId>ch.gremmi.cadero</groupId>
				<artifactId>report-fonts</artifactId>
				<version>1.0.0</version>
			</dependency>

			<!-- HIBERNATE -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-collections</groupId>
						<artifactId>commons-collections</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
				<exclusions>
					<exclusion>
						<groupId>cglib</groupId>
						<artifactId>cglib</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency> <!-- slf4j is used by Hibernate, but we will tell it to redirect to log4j -->
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.6.1</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-envers</artifactId>
				<version>${hibernate.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.2.0.Final</version>
			</dependency>

			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- JSP, JSF, RICHFACES -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet.api.version}</version>
				<scope>provided</scope> <!-- by Tomcat container -->
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>javax.servlet.jsp-api</artifactId>
				<version>${jsp.api.version}</version>
				<scope>provided</scope> <!-- by Tomcat container -->
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.servlet.jsp</groupId>
						<artifactId>javax.servlet.jsp-api</artifactId> <!-- Because it is provided by Tomcat -->
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>javax.faces-api</artifactId>
				<version>${jsf.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish</groupId>
				<artifactId>javax.faces</artifactId>
				<version>${jsf.impl.version}</version>
			</dependency>
			<dependency>
				<groupId>org.richfaces</groupId>
				<artifactId>richfaces</artifactId>
				<version>${richfaces.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>${el.api.version}</version>
				<scope>provided</scope> <!-- by Tomcat -->
			</dependency>
			<!-- Migration technique 2019: This should not be needed, because Tomcat provides an EL implementation. Unfortunately,
				CaderoWebappResourceHelper uses internal classes from com.sun.* This class is not registered if we do not use the following
				EL implementation. -->
			<dependency>
				<groupId>org.glassfish</groupId>
				<artifactId>javax.el</artifactId>
				<version>${el.impl.version}</version>
			</dependency>
			<!-- Migration technique 2019: We do not use CDI, but JSF >= 2.2 requires it. For some reason, this is
				not being resolved as a transitive dependency by Maven, so this dependency was added.
				See also: https://stackoverflow.com/a/28267581 -->
			<dependency>
				<groupId>javax.enterprise</groupId>
				<artifactId>cdi-api</artifactId>
				<version>${cdi.api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>6.8.8</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc7</artifactId>
				<version>12.1.0.2</version>
				<!-- This library must be provided at container level (else problem occur 
					on customer's infrastructure) -->
				<!-- Setup: 1) download ojdbc7.jar from artifactory repository, 2) put it in 
					$CATALINA_BASE/lib/ -->
				<scope>provided</scope>
			</dependency>

			<!-- DOZER -->
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>5.3.2</version>
			</dependency>

			<!-- Required by AOP that introduced by Spring security -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>2.2</version>
			</dependency>

			<!-- exportation -->
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>2.2.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>1.7</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity-tools</artifactId>
				<version>2.0-beta3</version>
			</dependency>
			<dependency>

				<groupId>org.codehaus.woodstox</groupId>
				<artifactId>woodstox-core-asl</artifactId>
				<version>4.1.3</version>
			</dependency>

			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-shapefile</artifactId>
				<version>${geotools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-swing</artifactId>
				<version>${geotools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-jts-wrapper</artifactId>
				<version>${geotools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.geotools</groupId>
				<artifactId>gt-epsg-hsql</artifactId>
				<version>${geotools.version}</version>
			</dependency>
			<!-- Added because gt-jts-wrapper pulls an old version of Xerces, which does not work well on Java 8 -->
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces.impl.version}</version>
			</dependency>

			<!-- Jasper report -->
			<dependency>
				<groupId>net.sf.jasperreports</groupId>
				<artifactId>jasperreports</artifactId>
				<version>4.5.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<distributionManagement>
		<repository>
			<id>project-release</id>
			<url>http://ci.elcanet.local/artifactory/prj_ev_cadero_release/</url>
			<uniqueVersion>true</uniqueVersion>
		</repository>
		<snapshotRepository>
			<id>project-snapshot</id>
			<url>http://ci.elcanet.local/artifactory/prj_ev_cadero_snapshot/</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
	</distributionManagement>

	<dependencies>
		<!-- COMMONS -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>

		<!-- SPRING ESSENTIALS -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
		</dependency>

		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
		</dependency>

		<!-- Required by AOP that introduced by Spring security -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		</dependency>

		<!-- xml exportation -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.17</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>verify</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Maven eclipse plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.8</version>
					<configuration>
						<wtpversion>2.0</wtpversion>
						<downloadSources>true</downloadSources>
						<additionalBuildcommands>
							<buildcommand>net.sf.eclipsecs.core.CheckstyleBuilder</buildcommand>
						</additionalBuildcommands>
						<additionalProjectnatures>
							<projectnature>net.sf.eclipsecs.core.CheckstyleNature</projectnature>
						</additionalProjectnatures>
						<additionalConfig>
							<file>
								<name>.checkstyle</name>
								<content>
	                              <![CDATA[<?xml version="1.0" encoding="UTF-8"?>
	                                    <fileset-config file-format-version="1.2.0" simple-config="true">
	                                   <local-check-config name="CADERO" location="${checkstyle.config.projectRelative.location}" type="project" description="">
	                                     <property name="checkstyle.suppressions.file" value="${checkstyle.suppressions.file.location}"/>
	                                     <additional-data name="protect-config-file" value="true"/>
	                                   </local-check-config>
	                                   <fileset name="all" enabled="true" check-config-name="CADERO" local="true">
	                                     <file-match-pattern match-pattern="." include-pattern="true"/>
	                                   </fileset> -->
	                                   <filter name="FileTypesFilter" enabled="true">
	                                     <filter-data value="java"/>
	                                   </filter>
	                                   <filter name="NonSrcDirs" enabled="true"/>
	                                 </fileset-config>
	                               ]]>
								</content>
							</file>
						</additionalConfig>
					</configuration>
				</plugin>

				<!-- Maven checkstyle plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.8</version>
					<configuration>
						<failOnViolation>false</failOnViolation>
						<failsOnError>true</failsOnError>
						<logViolationsToConsole>true</logViolationsToConsole>
						<violationSeverity>warning</violationSeverity>
						<configLocation>${checkstyle.config.file.location}</configLocation>
						<!-- This is a workaround for a bug of maven checkstyle plugin. http://jira.codehaus.org/browse/MCHECKSTYLE-134 -->
						<suppressionsLocation>${checkstyle.suppressions.file.location}</suppressionsLocation>
						<suppressionsFileExpression>just.a.dummy</suppressionsFileExpression>
						<propertyExpansion>checkstyle.suppressions.file=${checkstyle.suppressions.file.location}</propertyExpansion>
					</configuration>
					<executions>
						<execution>
							<id>checkstyle</id>
							<phase>process-resources</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>2.1.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- Define all available respositories for maven -->
	<repositories>
		<repository>
			<id>artifactory-elca</id>
			<name>ELCA repository</name>
			<url>http://ci.elcanet.local/artifactory/public/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>project-release</id>
			<url>http://ci.elcanet.local/artifactory/prj_ev_cadero_release/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>project-snapshot</id>
			<url>http://ci.elcanet.local/artifactory/prj_ev_cadero_snapshot/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>

		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net repository</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>http://download.osgeo.org/webdav/geotools/</url>
		</repository>
	</repositories>
	<profiles>

		<profile>
			<id>embedded</id>
			<properties>
				<maven.cadero.dir.suffix></maven.cadero.dir.suffix>
			</properties>
		</profile>
	</profiles>
</project>
