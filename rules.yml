
rules:
  - name: "Exact Match"
    description: "Check if the input version exactly matches a version in the roadmap."
    conditions:
      version_match_type: "exact"  # Can be 'exact' or 'wildcard'
      check_start_date: true       # Should we check the start date?
      check_end_date: true         # Should we check the end date?
    actions:
      if_true: "compatible"        # If the rule is true, the version is compatible
      if_false: "outdated"         # If the rule is false, the version is outdated

  - name: "Wildcard Match"
    description: "Check if the input version matches a wildcard version in the roadmap."
    conditions:
      version_match_type: "wildcard"  # Match against wildcard versions (e.g., '2.x')
      check_start_date: true          # Should we check the start date?
      check_end_date: true            # Should we check the end date?
    actions:
      if_true: "compatible"
      if_false: "outdated"

  - name: "No Start Date"
    description: "Handle cases where the start date is not specified."
    conditions:
      start_date_present: false    # This condition applies if no start date is present
    actions:
      if_true: "compatible"        # No start date means it’s valid, so compatible
      if_false: "ignore"

  - name: "No End Date"
    description: "Handle cases where the end date is not specified."
    conditions:
      end_date_present: false      # This condition applies if no end date is present
    actions:
      if_true: "compatible"        # No end date means it’s still valid, so compatible
      if_false: "outdated"

  - name: "Unknown Version"
    description: "Handle cases where the input version is not found in the roadmap."
    conditions:
      version_found_in_roadmap: false
    actions:
      if_true: "unknown"           # If not found, mark the version as unknown
      if_false: "compatible"       # If found, it's valid

default_action: "outdated"          # Default action if none of the rules apply
